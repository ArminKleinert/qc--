NOWEAVE=`echo ${NOWEAVE-noweave}`

# should split into ASDLSOURCES and CAMLSOURCES

SOURCES=asm cmmir ast
# SOURCES=`cmsrcs *.cm | sed 's/\.nw$//'`
SOURCESDOTDEFS=`echo $SOURCES | sed 's/ /.defs /g;s/$/.defs/'`
SOURCESDOTTEX=`echo   $SOURCES | sed 's/ /.tex /g;s/$/.tex/'`
SOURCESDOTASDL=`echo   $SOURCES | sed 's/ /.asdl /g;s/$/.asdl/'`
SOURCESDOTHTML=`echo   $SOURCES | sed 's/ /.html /g;s/$/.html/'`
SOURCESDOTNW=`echo   $SOURCES | sed 's/ /.nw /g;s/$/.nw/'`
SOURCESREGEXP=`echo $SOURCES | sed 's/ /|/g'`

NWLIB1=/usr/public/pkg/noweb/lib
NWLIB2=/usr/local/lib/noweb
NWLIB3=/usr/cs/contrib/lib/noweb
NWLIB4=/usr/local/noweb/lib

# change code to put things in derived locations

HTMLDIR=WWW/
TEXDIR=TEX/

SOURCESDOTHTML=`echo $SOURCES | sed "s@^@$HTMLDIR@;s@ @.html $HTMLDIR@g;s/\$/.html/"`

%.g: %.nw
	notangle -L -R$target $prereq | cpif $target


all:V: caml

clean:V: 
	rm -f *.html *~ *.t cm.dot cm.ps cm.eps 
	rm -f *.aux *.dvi *.toc *.ps *.log *.blg
	rm -f *.cmi *.cmo *.o 

clobber:V: clean
	rm -f *.g *.sml *.sig *.ord *.lex *.tab *.mli *.ml
	rm -f *.tex *.html *.defs cm.gif *.a
	rm -rf CM NW WWW
	rm -f *.asdl

html:V: $SOURCESDOTHTML

################################################################
#
#	counting lines of code

counts:V: count
count:V: $SOURCESDOTNW
	PATH="$NWLIB1:$NWLIB2:$NWLIB3:$NWLIB4:$PATH"
	export PATH
	markup $prereq | elide 'refman:*' '\*' | nocount -f



$TEXDIR%.ps: %.dot
	dot -Tps $prereq > $target

%.eps: %.ps
	ps2epsi $prereq $target

$HTMLDIR%.gif: %.dot
	egrep -v '^  (page|size|ratio) = ' $prereq |
	dot -Tgif | giftool -rgb white > $target

$HTMLDIR%.html: %.nw
	sh -c "mkdir $HTMLDIR 2>/dev/null; exit 0"
	echo '\section*{Contents}
	\tableofcontents' |
	$NOWEAVE -filter 'elide refman:*' -filter l2h -autodefs asdl -html -index - $prereq | htmltoc > $target

${HTMLDIR}index.html: index.nw
	$NOWEAVE -filter l2h -html $prereq | htmltoc | htmlgif > $target


################ defined identifiers (not used here)

^($SOURCESREGEXP)'\.'defs:R: '\1'.nw 
	nodefs -auto asdl $prereq > $target

all.defs: $SOURCESDOTDEFS 
	sort -u $prereq | cpif $target

################ literate source 

^($SOURCESREGEXP)'\.'tex:R: '\1'.nw
	$NOWEAVE -autodefs asdl -index -n $stem1.nw >$target


DOCINPUTS="doc.tex $SOURCESDOTTEX"

docin:V: $DOCINPUTS

doc.dvi: $DOCINPUTS

doc.tex: doc.nw
	$NOWEAVE -delay doc.nw >$target

doc_check:V: doc.tex
	for i in $SOURCESDOTTEX; do 
	  j=`basename $i .tex`
	  fgrep -s "\include{$j}" doc.tex || echo "$i not in doc" 1>&2
        done

%.nwi: %.tex
	noindex $prereq


###################
#
#  Targets for interfaces

caml:V: asm.cmi asm.cmo iRNode.cmi iRNode.cmo cMinusMinus.cmi cMinusMinus.cmo

CAMLOPTS="-I /home/cellar/nr/zephyr/asdlGen-19990816/src/ocaml"

asm.mli asm.ml asmUtil.mli asmUtil.ml: asm.asdl
	camlGen --ocaml --pickler=sexp $prereq

iRNode.mli iRNode.ml rTL.mli rTL.ml: rtl.asdl cmmir.asdl
	camlGen --ocaml --pickler=sexp $prereq

cMinusMinus.mli cMinusMinus.ml cMinusMinusUtil.mli cMinusMinusUtil.ml: ast.asdl
	camlGen --ocaml --pickler=sexp $prereq

%.asdl: %.nw
	notangle -R$target -L' --#line %-1L "%F"%N'  $prereq > $target

%.cmi: %.mli
	ocamlc $CAMLOPTS -c $prereq
%.cmo: %.ml
	ocamlc $CAMLOPTS -c $prereq

iRNode.cmi: rTL.mli
iRNode.cmo: rTL.ml
