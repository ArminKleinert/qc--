TOP    =        ..
LIBDIR =        ../lib

<../config/ocaml.mk
<../config/noweb.mk

OCAMLC_FLAGS=-I $LIBDIR -g
OCAMLO_FLAGS=-I $LIBDIR

SRC=luaast.ml luaast.mli luabaselib.ml luabaselib.mli luafloat.ml luafloat.mll \
	luaiolib.ml luaiolib.mli luainterp.ml luainterp.mli main.ml luaparser.ml luaparser.mli luascanner.ml \
	luahash.ml luahash.mli luavalue.ml luavalue.mli lualib.mli lualib.ml \
	luastrlib.mli luastrlib.ml luamathlib.mli luamathlib.ml newinterp.mli newinterp.ml


OBJ=luahash.cmo luafloat.cmo luavalue.cmo luaast.cmo luaparser.cmo luascanner.cmo \
	lualib.cmo luabaselib.cmo luainterp.cmo newinterp.cmo \
	luastrlib.cmo luamathlib.cmo luaiolib.cmo main.cmo
OPT=`echo $OBJ | sed 's/\.cmo/.cmx/g'`

all:V: oclua

oclua: $OBJ
	ocamlc $OCAMLC_FLAGS -o $target unix.cma cllib.cma $prereq 

oclua.opt: $OPT
	ocamlopt $OCAMLO_FLAGS -o $target unix.cmxa cllib.cmxa $prereq 

bin:V: $OBJ 
src:V: $SRC

TEST=03 04 05 06 07 08 10 12 02
# 09 needs I/O library -- dofile needs to return nil on error
test:V: oclua.opt
	for i in $TEST; do ./$prereq test/$i.lua; done	

luaparsex.mly: luasyntax.nw
	[ -r $target ] && chmod +w $target
	notangle -Rluaparser.mly $prereq | 
	sed "s/','/COMMA/g;s/'{'/LBRA/g;s/'}'/RBRA/g;s/'<'/LT/g;s/'>'/GT/g;s/':'/COLON/g;s/';'/SEMI/g;s/'^'/HAT/g;s/'\*'/STAR/g;s@'/'@SLASH@g;s/'('/LPAR/g;s/')'/RPAR/g;s/'='/GETS/g;s/'+'/PLUS/;s/'-'/MINUS/g;s/'\.'/DOT/g;s/'\['/LSQ/g;s/'\]'/RSQ/g" > $target
	chmod -w $target

luascanner.mll: luasyntax.nw
	notangle -R$target $prereq > $target

luafloat.mll: luavalue.nw
	notangle -R$target $prereq > $target

luaparser.ml: luaparsex.ml
	cp $prereq $target

luaparser.mli: luaparsex.mli luasyntax.nw
	(sed '/^val /,$d' luaparsex.mli; notangle -L"$LINE" -R$target luasyntax.nw) > $target

depend:V: DEPEND

clean:V:
	rm -f *.cmi *.cmo *.ml *.mli *.mly

DEPEND: $SRC
	$OCAMLDEP *.ml *.mli > $target


<DEPEND
