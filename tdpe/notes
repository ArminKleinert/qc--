
To lindig:

the "rtl" module is dependent on "srcmap" module, which does not make
much sense...


----------------------------------------

CVS issue: the root CVS repository excludes all *.ml and *.mli
files. The "!" option in .cvsignore seems not to work. Will this be an
issue?

----------------------------------------

The autodefs.caml Noweb filter depends on the path of local perl
instalation. It does not work on some systems.

----------------------------------------

ASDL code: better include it in the CVS repository? It's hard to find
the right ASDL implementation.

----------------------------------------

compile errors:

notangle  -Rqc--grammar.pod main.nw parse.output > qc--grammar.pod
echo '/##grammar##/d
.r !grep "^  *[0-9]" parse.output
wq' | ed qc--grammar.pod
                
812
6754
?
?
mk: notangle  -Rqc--grammar.pod ...  : exit status=2
mk:    ...  : exit status=1


----------------------------------------

At the moment, the implementation can handle only one
machine-instruction set at one time. The desirabilities of:

  1) having a program that can be specialized with respect to multiple
     instruction sets.

  2) Not knowing in advance how many isnstruction sets we might have.

  3) one residualizing instantiation for a particular instruction set
     should not be burdeoned by other instructions sets

are somehow irreconciable. The reason is as follows:

 - 2 and 3 impose that the type of residual expressions is parametric
   on the syntactic representation of machine instructions.

   This in turn, imposes the fact that the core TDPE implementation is
   parametric on the syntactic representation of machine
   instructions. However, this is a problem. To implement shift and
   reset, we need to have the expression type fully instantiated (the
   answer type of continuations).

   Even then, the residualizing definitions of the base types
   (std_nativeint) and such need to be fully instantiated (not
   polymorphic).

   Some solution may be devised, but it involves extensive use of
   functors and such. Not feasible, and the overhead would be too
   high.

----------------------------------------

moved nativeint into rlib, due to conflicts in generating
dependencies.
