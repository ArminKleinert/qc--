% -*- mode: Noweb; noweb-code-mode: caml-mode -*-
% l2h macro module 1 <a href="#$1.html"><tt>#1.nw</tt></a>
% l2h macro exfile 1 <a href="#$1"><tt>#1</tt></a>


This module contains special definitions to abstract the syntactic
definition.

<<one01Syntax.mli>>=
type exp = One01Syntax.exp
val pprint : exp -> unit

<<one01Syntax.ml>>=
type exp = One01Syntax.exp
let pprint = One01Syntax.pprint

<<one01Machine.ml>>=
type t = One01Trees.M.t
module MT = One01Trees.Rec(One01RtlMk.M)
let encode = MT.rec_t
module MR = One01RtlRec.M(One01TreesBuild.Build)
let recognizeInstruction =
  OpOps.lift (fun rtl -> MR.defaultOfInstruction (Rtl.Convert.rtl rtl))
let instruction = One01Nbe.t

<<one01Machine.mli>>=
type t = One01Trees.M.t
val instruction : t Tdpe.rr
val encode : t -> Rtl.rtl
val recognizeInstruction : Rtl.rtl -> t option

@

