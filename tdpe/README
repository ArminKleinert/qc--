
To be able to compile the code in this directory, in addition to the
tools needed for qc--, you will need the OCaml source code. Your OCaml
instalation should be obtained by compiling the respective version of
the source code.

   (The reason for this is that the implementation of TDPE we use is
    based on "callcc". An implementation of callcc is obtained with an
    external object function, compiled from C code (experimental code
    due to Xavier Leroy). To compile the C code, you need the source
    code of the OCaml compiler.)

Due to the use of callcc, the program here compiles only to bytecode,
and not to native code. Use the "OCAMLSOURCES" variable in the mkfile
to control the location of your local instalation of the OCaml source
code. I suggest the OCaml-3.00 version.

Compilation:

  - You need to "mk clean" at the top-level. This is necessary in
    order to remove the .ml and .mli source code of the evaluating
    instantiations in the "/src" directory. Running "mk" in this
    directory will extract the residualising instantiations from the
    same Noweb files.

  - run "mk".

mkfile variables:

  - The "MACHINE" variable determines the target machine-instruction
    set. The machine-dependent code is expected to be placed in an
    identically-named sub-directory.

    For the moment, machine-dependent code is provided for two
    instruction sets: 101 (a simplistic calculator) and a simplified
    version of Sparc instruction set.


Command line-options:

   - run "main -help" for a list of options.

Documentation:

To read the documentation, run "mk html" and start with index.html.

----------------------------------------

The code as it is right now does not compile. In order to obtain a
residualizing instance, one needs to generate the coresponding code
using the SML TDPE generator, from

cvs -d ~damian/Repository co nbegen

and run it with the appropriate parameters.

But wait: even if you do that, it will still not compile. You need to
generate the encoder and the recognizer with the toolkit. Even then,
the generated code needs to be edited by hand to compile properly.

In conclusion, better wait until a real implementation is available.

----------------------------------------

Questions, problems? Mail to damian@eecs.harvard.edu.


