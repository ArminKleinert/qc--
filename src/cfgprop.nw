1% -*- mode: Noweb; noweb-code-mode: caml-mode -*-

% ------------------------------------------------------------------ 
\section{Control-Flow Graph Properties}
% ------------------------------------------------------------------ 

We may attach arbitrary properties to each node of a control-flow
graph.
Because the set of properties is expected to evolve while the
flow-graph interface remains stable, we put the properties in a
separate module.

New analyses and transformations for the optimization backplane should
plan on extending this interface.

Because this interface is intended to be a grab bag of useful
information, we make no pretense at abstraction---it is simplest to
expose the representation directly.
N.B.~[[Cfgprop.t]] is a \emph{mutable} type.

<<exported types>>=
type t =                                (* type of node properties *)
  { mutable live : Register.Set.t       (* live registers and temps before a node *)
  } 
<<cfgprop.mli>>=
<<exported types>>
val empty : unit -> t
@ 
<<cfgprop.ml>>=
<<exported types>>
let empty () = { live = Register.Set.empty
               } 
