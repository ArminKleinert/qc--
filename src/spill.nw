% -*- mode: Noweb; noweb-code-mode: caml-mode -*-

\section{Spilling}


\subsection{Simple specification}

This is intended to be a very simple specification of spilling, which
may be replaced by a more elaborate version.

We assume that we have a control-flow graph and that we want to spill
a register or temporary in a given region of the flow graph.
We write [[member region n]] to indicate that a node~[[n]] lies in the
region of interest.
We contemplate an implementation in which the nodes of the
control-flow graph are placed in linear order, and in which regions
are intervals, but these assumptions are not necessary to this
specification.

We assume that we can find control-flow successors and predecessors
with functions [[succ]] and [[pred]].


<<spill.mli>>=
type node                               (* a node in the graph *)
type register                           (* a register or temporary *)
type location                           (* a spill location in memory *)

type region                             (* a region in the flow graph *)
type graph                              (* a flow graph *)

val spill : register -> region -> location -> graph -> graph
@ 
The new graph for [[spill r region m g]] is computed as follows:
\begin{tabbing}
xx\=xx\=xx\=xx\=xx\=xx\=xx\=xx\=\kill
for each node [[n]] in [[g]] such that [[member region n]] do\\
\> choose a fresh temporary [[t]]\\
\> for each node [[p]] in [[pred n]] such that %\\ \> 
[[not (member region p)]] and [[r]] is live before [[n]] do\\
\>\> insert [[m := r]] on the edge from [[p]] to [[n]]\\
\> if [[n]] reads [[r]], insert [[t := m]] before [[n]]\\
\> if [[n]] writes [[r]], insert [[m := t]] after [[n]]\\
\> substitute [[t]] for [[r]] in [[n]]\\
\> for each node [[s]] in [[succ n]] such that % \\ \> 
[[not (member region p)]] and [[r]] is live before [[s]] do\\
\>\> insert [[r := m]] on the edge from [[n]] to [[s]]\\
\end{tabbing}
It would be highly desirable to be able to separate the liveness tests
here, so for example we could always insert [[r := m]] or [[m := r]]
on edges that cross region boundaries, and then remove the unnecessary
instructions with a post-pass.

