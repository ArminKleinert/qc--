# ------------------------------------------------------------------ 
# rules and tools for OCaml
# ------------------------------------------------------------------ 

# ------------------------------------------------------------------ 
# $Id$
# ------------------------------------------------------------------ 

# ------------------------------------------------------------------ 
# compiler and tools
# ------------------------------------------------------------------ 

OCAML =         ocaml
# use the following for execution profiling
OCAMLC =        ocamlcp -p a    
OCAMLC =        ocamlc 
OCAMLO =        ocamlopt 
OCAMLTOP =      ocamlmktop
OCAMLDEP =      ocamldep
OCAMLYACC =     ocamlyacc
OCAMLLEX =      ocamllex

# provide these two where you have included this file
#
# OCAMLC_FLAGS=-I $LIBDIR
# OCAMLO_FLAGS=-I $LIBDIR

POD2MAN =       pod2man
POD2HTML =      pod2html

# ------------------------------------------------------------------ 
# rules
# ------------------------------------------------------------------ 

%.cmi:          %.mli
                $OCAMLC $OCAMLC_FLAGS -c $stem.mli

%.cmo:          %.ml
                $OCAMLC $OCAMLC_FLAGS -c $stem.ml

%.cmx:          %.ml
                $OCAMLO $OCAMLO_FLAGS -c $stem.ml

%.sig:          %.ml
                $OCAMLC $OCAMLC_FLAGS -c -i $stem.ml > $target

%.man:          %.1
                nroff -man $prereq > $target

%.1:            %.pod
                $POD2MAN   --release="Version $VERSION"         \
                           --center=$NAME                       \
                           --section=1 $prereq > $target
%.5:            %.pod
                $POD2MAN   --release="Version $VERSION"         \
                           --center=$NAME                       \
                           --section=5 $prereq > $target
%-man.html:     %.pod
                $POD2HTML  --title=$(NAME) $prereq > $target


# ------------------------------------------------------------------ 
# important file sets
# ------------------------------------------------------------------ 

LINE =          '# %L "%F"%N'
OCAMLTANGLE =   'for f in $target; do $NOTANGLE -L"$LINE" -R$f $prereq | $CPIF $f; done'

all:V: toposort.cmi toposort.cmo toy.cmi toy.cmo fatenv.cmi example.cmo


# ------------------------------------------------------------------  
# sources generated from noweb sources
# ------------------------------------------------------------------  

^([a-z]*)'\.'ml:R: toy.nw
	notangle -L"$LINE" -R$target $prereq | cpif $target


toposort.cmo: toposort.cmi 
toposort.cmx: toposort.cmi 
toy.cmo: toy.cmi 
toy.cmx: toy.cmi 


ast.cmo: ast.cmi 
ast.cmx: ast.cmi 
astUtil.cmo: ast.cmi astUtil.cmi 
astUtil.cmx: ast.cmx astUtil.cmi 
astpp.cmo: ast.cmi astpp.cmi 
astpp.cmx: ast.cmx astpp.cmi 
env.cmo: error.cmi env.cmi 
env.cmx: error.cmx env.cmi 
error.cmo: srcmap.cmi error.cmi 
error.cmx: srcmap.cmx error.cmi 
example.cmo: fatenv.cmi toposort.cmi toy.cmi 
example.cmx: fatenv.cmi toposort.cmx toy.cmx 
main.cmo: astUtil.cmi astpp.cmi cmdline.cmi error.cmi parse.cmi scan.cmo \
    semant.cmi srcmap.cmi this.cmo 
main.cmx: astUtil.cmx astpp.cmx cmdline.cmi error.cmx parse.cmx scan.cmx \
    semant.cmx srcmap.cmx this.cmx 
parse.cmo: ast.cmi error.cmi srcmap.cmi parse.cmi 
parse.cmx: ast.cmx error.cmx srcmap.cmx parse.cmi 
scan.cmo: error.cmi parse.cmi srcmap.cmi 
scan.cmx: error.cmx parse.cmx srcmap.cmx 
semant.cmo: ast.cmi env.cmi error.cmi parse.cmi scan.cmo srcmap.cmi types.cmi \
    semant.cmi 
semant.cmx: ast.cmx env.cmx error.cmx parse.cmx scan.cmx srcmap.cmx types.cmx \
    semant.cmi 
srcmap.cmo: srcmap.cmi 
srcmap.cmx: srcmap.cmi 
toposort.cmo: toposort.cmi 
toposort.cmx: toposort.cmi 
toy.cmo: toy.cmi 
toy.cmx: toy.cmi 
types.cmo: env.cmi types.cmi 
types.cmx: env.cmx types.cmi 
astUtil.cmi: ast.cmi 
astpp.cmi: ast.cmi 
error.cmi: srcmap.cmi 
parse.cmi: ast.cmi srcmap.cmi 
semant.cmi: error.cmi 
