
\input{macros.tex}

% l2h substitution cfg CFG
% l2h substitution dots ...
% l2h substitution ast AST
% l2h substitution AST AST
% l2h substitution rtl RTL
% l2h substitution ir IR
% l2h substitution noweb NOWEB
% l2h substitution qcc QC--
% l2h substitution C C--
% l2h substitution PAL C--
% l2h substitution pal C--
% l2h substitution asdl ASDL
% l2h substitution ocaml OCaml
% l2h substitution forall forall
% l2h macro module 1 <a href="#$1.html"><tt>#1.nw</tt></a>

% ################################################################## 
\section{Register}
% ################################################################## 

The control-flow graph (module \module{cfg2}) store register sets in
nodes which are used by the liveness analysis. This module provides a
type definition for a register and sets over them.

<<type t>>=
type t = Rtl.space * Base.std_int * Rtl.width
@

<<register.mli>>=
<<type t>>
module Set: Set.S with type elt = t
module Map: Map.S with type key = t
@

<<register.ml>>=
<<type t>>

module Compare = struct
    <<type t>>
    let compare = compare
end
module Set = Set.Make(Compare)
module Map = Map.Make(Compare)
@

