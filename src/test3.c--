// execute the commands below to use this file as a test case
//

target byteorder little;

import bits32 "p" as f;

section "data" {
	align 32;
	foo:
	bits16[] {1::bits16,2::bits16};
	bits32[] {p-j};

}

section "text" {
	const proc = 3;

g_data:
	bits32[5];
	// bits8[] { 1::bits8 };
	align 8;

	p (bits32 i, bits32 j) {
		stackdata {
			p_data:
			bits32[5];
		}
		loop:
		bits32 stack;

		stack = p_data;

		i = i-1;
		if (i >= 0) { 
			goto loop ; 
		}
		else {
			bits32 k,l;
			k = 0;
			k = 1;
			i,j,k = f(i) also cuts to c;
		}
		return (i,j,k,l); 

		continuation c (i):
		i = i + 1;
		return (i);
	}

	j (bits32 c) {
		if (c >= 32::bits32) {
			return (1);
		} else {
			c = c + 32::bits32;
			jump j (c);
		}    
	}        
}
   
