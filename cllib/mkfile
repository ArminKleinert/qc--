# ------------------------------------------------------------------ 
# $Id$ 
# ------------------------------------------------------------------ 

NAME =      cllib

# ------------------------------------------------------------------ 
# paths
# ------------------------------------------------------------------ 

LIBDIR =    ../lib
BINDIR =    ../bin
MANDIR =    ../man


# ------------------------------------------------------------------ 
# rules and tools for OCaml
# ------------------------------------------------------------------ 

<../config/ocaml.mk

#
# compiler flags used by the rules just included
#

OCAMLC_FLAGS =  -I $LIBDIR
OCAMLO_FLAGS =  -I $LIBDIR

# ------------------------------------------------------------------ 
# (high level) virtual targets
# ------------------------------------------------------------------ 

LIBCMX =        $NAME.cmxa
LIBCMO =        $NAME.cma

all:V:          $LIBCMO $LIBCMX

update:V:       $LIBDIR/$LIBCMO $LIBDIR/$LIBCMX

test:V:
                echo "nothing to be done"

dvi:V:          
                echo "nothing to be done"

html:V:         $HTML


clean:V:    
                rm -f $CMO $CMX $CMI $OBJ
                rm -f *.output
                rm -f $LIBCMX $LIBCMO $NAME.a

# ------------------------------------------------------------------ 
# important file sets
# ------------------------------------------------------------------ 

ML  =           lc.ml       \
                rc.ml       \
                rc_parse.ml \
                pc.ml       \
                pp.ml       \
                rc_ast.ml   \
                rx.ml       \

# list all *.ml *.mli souces generated by some tool below
# we need to generated them before we can generated the list
# of dependencies (see target depend)

GENERATED=rc_scan.ml rc_parse.ml rc_parse.mli

CMO =           `echo $ML       | sed 's/\.ml/.cmo/g'`
CMX =           `echo $ML       | sed 's/\.ml/.cmx/g'`
OBJ =           `echo $ML       | sed 's/\.ml/.o/g;'`

# ------------------------------------------------------------------ 
# Noweb stuff - once this is stable the generic part should go to
# ../config/noweb.mk
# ------------------------------------------------------------------ 

NOWEAVE =       noweave   -filter emptydefn
NOTANGLE =      notangle  -filter emptydefn
CPIF =          cpif
LATEX =         latex
RERUN =         Rerun (LaTeX|to get cross-references right)

LINE =          '# %L "%F"%N'
OCAMLTANGLE =   'for f in $target; do $NOTANGLE -L"$LINE" -R$f $prereq | $CPIF $f; done'
MISCTANGLE  =   'for f in $target; do $NOTANGLE -R$f $prereq | $CPIF $f; done'

HTML =          `echo *.nw       | sed 's/\.nw/.html/g;'`

# ------------------------------------------------------------------ 
# Documentation
# ------------------------------------------------------------------ 

%.tex:	%.inc
	cp $stem.inc $stem.tex
	ed -s $stem.tex <<EOF 
	1
	i
	\documentclass{article}
	\usepackage{noweb}
	\usepackage{tabularx}
	\pagestyle{noweb}
	\noweboptions{}
	\begin{document}
	\nwfilename{$stem.nw}
	\nwbegindocs{}
	.
	\$
	a
	\end{document}
	.
	w
	q
	EOF 

%.inc:          %.nw
                $NOWEAVE -delay -filter ../config/autodefs.ocaml -index $prereq > $target

%.html:         %.nw
                $NOWEAVE -delay -filter ../config/autodefs.ocaml -index -html -filter l2h $prereq > $target

%.dvi:          %.tex
                $LATEX "\\scrollmode \\input $stem.tex"
                ltxcount=3
                while egrep -s "$RERUN" $stem.log && [ $ltxcount -gt 0 ]
                do
                    $LATEX "\\scrollmode \\input $stem.tex"
                    ltxcount=`expr $ltxcount - 1`
                done

%.ps:           %.dvi
                dvips -Ppdf -o $target $prereq

# ------------------------------------------------------------------  
# documents created from .nw sources
# ------------------------------------------------------------------  

pp.ml           \
pp.mli:         pp.nw
                eval $OCAMLTANGLE

pc.ml           \
pc.mli:         pc.nw
                eval $OCAMLTANGLE

lc.ml           \
lc.mli:         lc.nw
                eval $OCAMLTANGLE

rx.mli          \
rx.ml:          rx.nw
                eval $OCAMLTANGLE

rc.mli          \
rc.ml:          rc.nw
                eval $OCAMLTANGLE

rc_scan.mll     \
rc_parse.mly:   rc.nw
                eval $MISCTANGLE
                
# ------------------------------------------------------------------ 
# build the libraries
# ------------------------------------------------------------------ 

$LIBCMO:        $CMO
		$OCAMLC $OCAMLC_FLAGS -a -o $target $prereq
                

$LIBCMX:	$CMX
		$OCAMLO $OCAMLO_FLAGS -a -o $target $prereq
                
# ------------------------------------------------------------------ 
# update hierarchy
# ------------------------------------------------------------------ 

$LIBDIR/$LIBCMO:    $LIBCMO
		    for i in $LIBCMO *.mli *.cmi; do		    \
		        cmp -s $i $LIBDIR/$i || cp $i $LIBDIR ;     \
		    done

$LIBDIR/$LIBCMX:    $LIBCMX 
		    for i in $LIBCMX $NAME.a *.mli *.cmi; do	    \
		        cmp -s $i $LIBDIR/$$i || cp $i $LIBDIR ;    \
		    done

# ------------------------------------------------------------------ 
# recalculate dependencies
# make sure that generators are run first
# ------------------------------------------------------------------ 

depend:V:	$GENERATED
		$OCAMLDEP *.mli *.ml > DEPEND

# ------------------------------------------------------------------ 
# include dependencies
# ------------------------------------------------------------------ 

<DEPEND

