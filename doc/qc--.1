.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "QC-- 1"
.TH QC-- 1 "2004-08-03" "Version 20041015" "qc--"
.SH "NAME"
qc\-\- \- The Quick C\-\- Compiler
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBqc\*(--\fR [\fIoption\fR | \fIfile\fR] ...  

\&\fBqc\-\-.opt\fR [\fIoption\fR | \fIfile\fR] ... 
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBqc\*(--\fR is a compiler for the C\*(-- language. It takes \fIfile\fR names as
arguments and compiles, assembles, and links the \fIfile\fR arguments into
an executable file (by default named \f(CW\*(C`a.out\*(C'\fR). An \fIoption\fR has the
form \f(CW\*(C`\-\*(C'\fR\fIname\fR or \fIname\fR\f(CW\*(C`=\*(C'\fR\fIvalue\fR, hence any argument with an
equal sign is treated as an \fIoption\fR.  Any other argument \fBqc\*(--\fR
regards as a \fIfile\fR.  
.PP
The binary called \fBqc\*(--\fR is a bytecode file; 
\&\fBqc\-\-.opt\fR, if availabe, is a native-code binary.
Use \fBqc\-\-.opt\fR if you have it; the speedup is impressive.
.PP
The \fBqc\*(--\fR compiler is controlled by a built-in Lua interpreter that
runs a compiled-in Lua program. By modifying the state of the
compiler or modifying the Lua program, a user can customize the
compiler. In fact, any option of the form \fIname\fR\f(CW\*(C`=\*(C'\fR\fIvalue\fR updates a
variable in the Lua interpreter.  These aspects are documented in the
separate manual page qc\*(--\fIinternals\fR\|(1).
.PP
The treatment of a file depends on its suffix. The objective is to
compile each file such that in can be linked with all others into a
final executable.  If the suffix of a file is unrecognized, the file is
passed to the linker. 
.PP
Usually \fBqc\*(--\fR generates machine code but it can also generate code for
the Quick C\*(-- interpreter qc\*(--\fIinterp\fR\|(1); see the \fB\-interp\fR option
below. 
.ie n .IP """.c\-\-""\fR or \f(CW"".cmm""" 12
.el .IP "\f(CW.c\-\-\fR or \f(CW.cmm\fR" 12
.IX Item ".c-- or .cmm"
C\*(-- source file: compile, assemble, link.  A file \f(CW\*(C`file.c\-\-\*(C'\fR is taken
as a C\*(-- source file. Unless \fIoptions\fR specify otherwise, a C\*(-- source
file is compiled to assembly code \f(CW\*(C`file.s\*(C'\fR and assembled to an object
file \f(CW\*(C`file.o\*(C'\fR that is linked with the object files derived from the
other \fIfile\fR arguments.
.ie n .IP """.o""" 12
.el .IP "\f(CW.o\fR" 12
.IX Item ".o"
Object code file: link.  A file \f(CW\*(C`file.o\*(C'\fR is considered an object file.
\&\fBqc\*(--\fR does not touch this file but passes it to the linker such that
it is linked with the other files from the command line.  
.ie n .IP """.a""\fR or \f(CW"".so""" 12
.el .IP "\f(CW.a\fR or \f(CW.so\fR" 12
.IX Item ".a or .so"
Archive file: link.  A file \f(CW\*(C`file.a\*(C'\fR or \f(CW\*(C`file.so\*(C'\fR is considered an
archive file that is passed untouched to the linker.
.ie n .IP """.s""" 12
.el .IP "\f(CW.s\fR" 12
.IX Item ".s"
Assembler source: assemble, link. A file \f(CW\*(C`file.s\*(C'\fR is taken as an
assembly source file. It is assembled to an object file \f(CW\*(C`file.o\*(C'\fR that
is linked with the other files from the command line.
.ie n .IP """.qs""" 12
.el .IP "\f(CW.qs\fR" 12
.IX Item ".qs"
Interpreter source: link. A \f(CW\*(C`file.qs\*(C'\fR is source code understood by the
qc\*(--\fIinterp\fR\|(1) interpreter. It is linked with other files into an
executable.
.ie n .IP """.lua""" 12
.el .IP "\f(CW.lua\fR" 12
.IX Item ".lua"
Lua source file: interpret. A file \f(CW\*(C`file.lua\*(C'\fR is taken as a Lua source
code file for the Lua interpreter built into the \fBqc\*(--\fR compiler. Such
a file is executed by the interpreter. See qc\*(--\fIinternals\fR\|(1) for details.
.PP
If invoked with no arguments, \fBqc\*(--\fR summarizes its options on the
standard error and exits with exit code \f(CW1\fR.
.PP
\&\fBqc\*(--\fR removes intermediate files, like assembly files, unless options
specify otherwise. Linking is always the last stage, unless the \fB\-c\fR or
\&\fB\-S\fR flag suppresses it.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBqc\*(--\fR processes options from left to right, and then all file name
arguments from left to right. 
.IP "\fB\-globals\fR" 4
.IX Item "-globals"
Inserts  the digital signature of the C\*(-- global register variables
into the \fIfirst\fR C\*(-- file compiled on this run.
Every C\*(-- program must contain exactly one instance of this digital signature.
Therefore, the \fB\-globals\fR option should be used on exactly one of the
compilation runs used to build the program.
.IP "\fB\-stop\fR \fB.\fR\fIextension\fR" 4
.IX Item "-stop .extension"
When the compiler derives a file whose name ends in \fB.\fR\fIextension\fR,
stop translating and keep the file.
For example, the \fB\-c\fR and \fB\-S\fR options used by some C compilers can be
rendered as \fB\-stop .o\fR and \fB\-stop .s\fR respectively.
.IP "\fB\-keep\fR \fB.\fR\fIextension\fR" 4
.IX Item "-keep .extension"
Keep all derived files whose names end in \fB.\fR\fIextension\fR.
.IP "\fB\-keep\fR \fBall\fR" 4
.IX Item "-keep all"
Keep all derived files, no matter what their names.
.IP "\fB\-o\fR \fIoutput\fR" 4
.IX Item "-o output"
Name the output file \fIoutput\fR.  If \fB\-c\fR or \fB\-S\fR is specified and
there is exactly  one  source  file,  this option  names  the object or
assembly file, respectively.  Otherwise, this  option  names  the  final
executable file generated  by  the  loader. If \fB\-o\fR is not used, the
output file defaults to \f(CW\*(C`a.out\*(C'\fR.
.IP "\fB\-L\fR\fIdir\fR" 4
.IX Item "-Ldir"
Add \fIdir\fR to the library search path. This option can be repeated and
is passed to the linker. 
.IP "\fB\-l\fR\fIname\fR" 4
.IX Item "-lname"
Add library \fIname\fR to the list of libraries to be searched. This option
can be repeated is passed to the linker.
.IP "\fB\-interp\fR" 4
.IX Item "-interp"
Emit code for the Quick C\*(-- interpreter qc\*(--\fIinterp\fR\|(1). When this option
is used, the options \fB\-c\fR and \fB\-S\fR have the same effect because
interpreter code makes no distinction between assembly code and object
code.  The only intermediate file format \fIfile\fR\f(CW\*(C`.qs\*(C'\fR.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Print commands as they are executed. Commands include calls to all
external programs, like the assembler or linker.
.IP "\fB\-version\fR" 4
.IX Item "-version"
Print version to stdout and stop with exit code \f(CW0\fR. This option is
incompatible with any other option.
.IP "\fB\-help\fR" 4
.IX Item "-help"
Summarize options to stdout and stop with exit code \f(CW0\fR. This option is
incompatible with any other option.
.IP "\fB\-man\fR" 4
.IX Item "-man"
Output this manual page to stdout stop with exit code \f(CW0\fR. This option
is incompatible with any other option.
.IP "\fIvar\fR\fB=\fR\fIvalue\fR" 4
.IX Item "var=value"
Assign the variable \fIvar\fR in \fBqc\*(--\fR's Lua interpreter the new value
\&\fIvalue\fR. Refer to qc\*(--\fIinternals\fR\|(1) for details.
.Sp
# this feature is already documented in qc\*(--internals and is not
# intended for the casual user.
# =item \fB\-e\fR \fIchunk\fR
#
# Evaluate the Lua code \fIchunk\fR in \fBqc\*(--\fR's Lua interpreter. 
#
=back
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.RS 4
.IP "\s-1TMP\s0, \s-1TEMP\s0, \s-1TMPDIR\s0" 4
.IX Item "TMP, TEMP, TMPDIR"
The environment variables \f(CW\*(C`TMP\*(C'\fR, \f(CW\*(C`TEMP\*(C'\fR, and \f(CW\*(C`TMPDIR\*(C'\fR are checked in
this order. The first one found to define a non-empty string defines
the path to the directory where temporary files are stored. Otherwise a
platform-specific default directory is used. 
.RE
.RS 4
.SH "EXIT CODE"
.IX Header "EXIT CODE"
Upon successful executions, \fBqc\*(--\fR exists with exit code \f(CW0\fR. If
\&\fBqc\*(--\fR finds an error in a source file or while processing command line
options, it exists with \f(CW1\fR. Internal errors in the compiler lead to an
exit code of \f(CW2\fR.
.SH "FILES"
.IX Header "FILES"
.ie n .IP "\fIfile\fR"".c\-\-""\fR, \fIfile\fR\f(CW"".cmm""" 20
.el .IP "\fIfile\fR\f(CW.c\-\-\fR, \fIfile\fR\f(CW.cmm\fR" 20
.IX Item "file.c--, file.cmm"
C\*(-- source file.
.ie n .IP "\fIfile\fR"".o""" 20
.el .IP "\fIfile\fR\f(CW.o\fR" 20
.IX Item "file.o"
Object file.
.ie n .IP "\fIfile\fR"".s""" 20
.el .IP "\fIfile\fR\f(CW.s\fR" 20
.IX Item "file.s"
Assembly source file.
.ie n .IP "\fIfile\fR"".a""" 20
.el .IP "\fIfile\fR\f(CW.a\fR" 20
.IX Item "file.a"
Archive file (static library).
.ie n .IP "\fIfile\fR"".so""" 20
.el .IP "\fIfile\fR\f(CW.so\fR" 20
.IX Item "file.so"
Archive file (dynamic library).
.ie n .IP "\fIfile\fR"".qs""" 20
.el .IP "\fIfile\fR\f(CW.qs\fR" 20
.IX Item "file.qs"
Interpreter source file.
.ie n .IP "\fIfile\fR"".lua""" 20
.el .IP "\fIfile\fR\f(CW.lua\fR" 20
.IX Item "file.lua"
Lua source code.
.ie n .IP """qc\-\-.lua""" 20
.el .IP "\f(CWqc\-\-.lua\fR" 20
.IX Item "qc--.lua"
Startup file for Lua interpreter.
.ie n .IP """a.out""" 20
.el .IP "\f(CWa.out\fR" 20
.IX Item "a.out"
Default file name for output file.
.ie n .IP """/tmp""" 20
.el .IP "\f(CW/tmp\fR" 20
.IX Item "/tmp"
Default directory for temporary files.
.RE
.RS 4
.SH "SEE ALSO"
.IX Header "SEE ALSO"
http://www.cminusminus.org/,
http://www.lua.org/.
.Sp
\&\fIlua\fR\|(1), \fIld\fR\|(1), \fIas\fR\|(1), qc\*(--\fIinternals\fR\|(1), qc\*(--\fIinterp\fR\|(1).
.SH "BUGS"
.IX Header "BUGS"
Report bugs to \f(CW\*(C`bugs@cminusminus.org\*(C'\fR. Include a \fIsmall\fR example that
allows us to reproduce the bug. The bug tracking system can be found at
http://www.cminusminus.org/qc\*(--bugs/.
.Sp
I have to find a way to typeset \*(L"qc\-\-\*(R" correctly. Postponed for the
moment. 
.SH "AUTHORS"
.IX Header "AUTHORS"
Christian Lindig <lindig@eecs.harvard.edu>, 
Norman Ramsey <nr@eecs.harvard.edu>,
Daniel Damian <damian@eecs.harvard.edu>,
John Dias <dias@eecs.harvard.edu>,
Jonathan D. Eddy <eddy@fas.harvard.edu>,
Reuben Olinsky <olinsky@eecs.harvard.edu>,
Kevin Redwine <redwine@eecs.harvard.edu>.
.SH "VERSION"
.IX Header "VERSION"
$Id$
