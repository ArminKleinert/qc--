#! /usr/bin/perl -w
#
# $Id$
#  
# Usage: ocamlburg foo.mlb | ./ocamlburgfix foo.ml > foo.ml
# See documentation below.

if ($#ARGV != 0) {
    print STDERR "usage   : $0 file.ml\n";
    print STDERR "typical : ocamlburg foo.mlb | $0 foo.ml > foo.ml\n";
    exit 1;
}

$file = $ARGV[0];       # file name of output file
$n = 0;                 # line number

while (defined($line = <STDIN>)) {
    $n++;
    if ($line =~ /^# 000 "\/dev\/stdout"/) {
        printf("# %d \"%s\"\n", $n+1, $file);
        next;
    } else {
        print $line;
    }    
}

exit 0;
__END__

=head1 NAME

ocamlburgfix - improve output of ocamlburg(1)

=head1 SYNOPSIS

B<ocamlburgfix> I<file>

C<ocamlburg> C<foo.mlb> | B<ocamlburgfix> C<foo.ml> > C<foo.ml>

The argument I<file> is the name of the final output file, as shown in
the examle above.

=head1 DESCRIPTION

B<ocamlburgfix> reads input from stdin and annotates cpp(1) lines
directives in the input with the name I<file> from the command line.
When the final output is compiled using ocamlc(1), the annotations lead
to more precise error messages than without.

The output of ocamlburg(1) contains line directives that point back to
the source of certain lines in the output:
 
  105  # 19 "foo.mlb"
  106                                  ( x + y + z)
  107                                  
  108  # 000 "/dev/stdout"
  109  )
  110                  }

The lines 106-107 stem from line 19-20 in file foo.mlb. In case of an
error in these lines the ocamlc(1) compiler, who understands the line
directives, can point to the right file. What this script does, is to
replace the lines containing /dev/stdout with references to foo.ml, the
actual output file:

  105  # 19 "foo.mlb"
  106                                  ( x + y + z)
  107                                  
  108  # 109 "foo.ml"
  109  )
  110                  }

This helps the compiler to point to the right file in case an error is
found in the code generated by ocamlburg that is not copied verbatim
from foo.mlb.

=head1 AUTHOR

Christian Lindig <lindig@eecs.harard.edu>

=head1 SEE ALSO

ocamlburg(1), ocamlc(1), cpp(1)
http://www.cminusminus.org/tools.html







