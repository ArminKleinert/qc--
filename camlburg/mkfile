ML=	myList.ml	\
	pprint.ml	\
	syntax.ml	\
	code.ml		\
	spec.ml		\
	image.ml	\
	pcagain.ml	\
	token.ml	\
	lex.ml		\
	parse.ml	\
	norm.ml		\
	burg.ml		\
	main.ml		\
	
MLI=			\
	burg.mli	\
	code.mli	\
	image.mli	\
	norm.mli	\
	parse.mli	\
	pprint.mli	\
	spec.mli	\
	syntax.mli	\
	myList.mli	\
	
CMO=`echo $ML | sed 's/\.ml/.cmo/g'`

TEST=test.ml test2.ml

<../config/ocaml.mk

all:V: mlburg

LIBDIR=../lib
OCAMLC_FLAGS=-I $LIBDIR

LINE =          '# %L "%F"%N'

%.tex: %.nw
	noweave -autodefs ocaml -index $prereq > $target

%.ml: %.nw
	notangle -L"$LINE" -R$target $prereq > $target

%.mli: %.nw
	notangle -L"$LINE" -R$target $prereq > $target


lex.mll: lex.nw
	notangle -R$target $prereq > $target

main.ml: burg.nw
	notangle -L"$LINE" -R$target $prereq > $target

mlburg: $CMO
	$OCAMLC $OCAMLC_FLAGS -o $target cllib.cma $prereq 

clean:V:
	rm -f *.cmi *.cmo
	rm -f *~

clobber:V: clean
	rm -f mlburg

bin:V: $BIN

lex.ml: lex.mll
	ocamllex $prereq

test:V: sample.cmo

^(sample|iburg)'\.'ml'$':R: '\1'.mlb mlburg
	mlburg $stem1.mlb > $target

a.out:	test.cmo test2.cmo
	$OCAMLC -o $target $prereq

test.ml: ss.ml gen.ml
	cat $prereq > $target

gen.ml: sample.mlb mlburg
	mlburg sample.mlb > $target

token.ml: lex.nw
        notangle -L"$LINE" -R$target $prereq > $target

<DEPEND

depend:V: DEPEND
DEPEND: $ML $MLI
	$OCAMLDEP $prereq > DEPEND

ss.ml:
	# do nothing
