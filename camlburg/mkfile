# :vim ts=8 sw=4 et:
# ------------------------------------------------------------------ 
# $Id$ 
# ------------------------------------------------------------------ 
#
# This directory depends on ../cllib, and specifically the targets
# update and update.opt there.
#
# Before doing anything else, run a "mk depend" to build the 
# dependency file. Otherwise the buil process will get stuck!

# ------------------------------------------------------------------ 
# paths
# ------------------------------------------------------------------ 

NAME =      mlburg

TOP    =    ..
INTERP =    evaluating
DEPEND =    DEPEND

LIBDIR =    ../lib
BINDIR =    ../bin
MANDIR =    ../man

prefix =    /usr/local

# ------------------------------------------------------------------ 
# (high level) virtual targets
# ------------------------------------------------------------------ 

HTML =          `echo *.nw       | sed 's/\.nw/.html/g;'`
DVI  =          `echo *.nw       | sed 's/\.nw/.dvi/g;'`
PS   =          `echo *.nw       | sed 's/\.nw/.ps/g;'`

all:V:          mlburg      runtime
all.opt:V:      mlburg.opt  runtime.opt  

update update.opt:QV:   
                echo "nothing to be done"

dvi:V:          $DVI
html:V:         $HTML
ps:V:           $PS

man:V:          mlburg.1

test:VQ:        sample.cmo iburg.cmo

depend:V:       $DEPEND

runtime:V:      camlburg.cmo camlburg.cmi camlburg.mli camlburg.ml
runtime.opt:V:  camlburg.cmx camlburg.cmi camlburg.mli camlburg.ml camlburg.o

clean:V:    
                rm -f *.cmo *.cmi *.cmx *.o *.sig 
                rm -f *.output
                
clobber:V:      clean
                rm -f mlburg mlburg.opt
                rm -f *.ml *.mll *.mli $DEPEND *.mly
                rm -f *.aux *.log *.dvi *.tex *.inc *.toc *.html

# ------------------------------------------------------------------ 
# rules and tools for OCaml
# ------------------------------------------------------------------ 

<../config/ocaml.mk
<../config/noweb.mk

# compiler flags used by the rules just included

OCAMLC_FLAGS =  -g -I $LIBDIR
OCAMLO_FLAGS =     -I $LIBDIR

# ------------------------------------------------------------------ 
# new rule for Burg specifications
# causes ambiguities with noweb rules :-(
# ------------------------------------------------------------------ 

# %.ml:           %.mlb ./mlburg
#                ./mlburg $stem.mlb > $target

# ------------------------------------------------------------------ 
# important file sets
# ------------------------------------------------------------------ 

ML =            code.ml         \
                spec.ml         \
                parseerror.ml   \
                parse.ml        \
                lex.ml          \
                norm.ml         \
                burg.ml         \
                main.ml         \
                

MLI =           burg.mli        \
                code.mli        \
                main.mli        \
                norm.mli        \
                parse.mli       \
                parseerror.mli  \
                spec.mli        \


SCAN =          $ML $MLI \
                camlburg.ml camlburg.mli\
                sampleclient.ml\

scan:Q:         $SCAN
                echo $SCAN                         

CMO =           `echo $ML       | sed 's/\.ml/.cmo/g'`
CMX =           `echo $ML       | sed 's/\.ml/.cmx/g'`

# ------------------------------------------------------------------ 
# building binaries
# ------------------------------------------------------------------ 

mlburg:         $LIBDIR/cllib.cma  $CMO 
                $OCAMLC $OCAMLC_FLAGS -o $target $prereq
                
mlburg.opt:     $LIBDIR/cllib.cmxa $CMX
                $OCAMLO $OCAMLO_FLAGS -o $target $prereq

# ------------------------------------------------------------------ 
# extra rules for cases not covered by noweb.mk or to resolve
# ambiguities
# ------------------------------------------------------------------ 

lex.mll:        lex.nw
	        $NOTANGLE -R$target $prereq > $target

lex.ml:         lex.mll
                $OCAMLLEX $prereq

parse.mly:      parse.nw
                $NOTANGLE -R$target $prereq > $target

parse.ml:       parse.mly

parse.mli       \
parse.ml        \
parse.output:   parse.mly
                $OCAMLYACC -v parse.mly

mlburg.pod:     main.nw
                $NOTANGLE -R$target $prereq > $target

# ------------------------------------------------------------------ 
# Examples
# ------------------------------------------------------------------ 

sample.mlb:     sample.nw
                $NOTANGLE -L"$LINE" -R$target $prereq > $target

sampleclient.ml: sample.nw
                $NOTANGLE -L"$LINE" -R$target $prereq > $target

sample.ml:      sample.mlb mlburg runtime
                ./mlburg sample.mlb > $target

iburg.ml:       iburg.mlb mlburg runtime
                ./mlburg iburg.mlb > $target


# ------------------------------------------------------------------ 
# recalculate dependencies
# make sure that generators are run first
# ------------------------------------------------------------------ 

$DEPEND:        $SCAN
                $OCAMLDEP $SCAN > $DEPEND

# ------------------------------------------------------------------ 
# include dependencies
# ------------------------------------------------------------------ 

<$DEPEND

