%start number
%type <name> ident
%type <value> number
%term IDENT CON
%term const
%term int

%%
number : ADD(n:number, m:number) {: n+m :} 
number : SUB(n:number, m:number) {: n-m :}
number : MUL(n:number, m:number) {: n*m :}
number : DIV(n:number, m:number) {: if m = 0 then assert false else n/m :}
number : ident               {: lookup :}
ident  : IDENT               {: ident :}
number : CON(n:int)        [2]  {: n :}
number : CON(33)           [1]  {: 99 :} 
