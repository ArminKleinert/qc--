/*
 * Code to test the parser
 */

pragma line { 1 }
pragma foo { this pragma should be '}' (* skipped *)  by "{" the lexer }
pragma pragma { }

import bits32 putchar, puts, printf;
export cmm_main;
global 
{
    invariant bits16 j "j", k "k";

}

global {}


section "data" 
{

    fstr: 
    bits8[]    "%i\n";
    bits8     { 0 } ;	
       
    cr:
    bits8[]     "\n";
    bits8     { 0 };

}

section "text" 
{
    align 32;

    fact(bits32 n)
    { 
        float64     j ;
        float32     k;

        if foo == bar {
            bar:
            bar:
            bar:

        } else {

            bar:
            ;    
            
        }

        foo, bar, baz = 4+4 , 5+5, 6+6 ;
        
        continuation mycont (j,k):

        span foo bar {
            j = 0;
            loop:
                j = j+1;
                goto loop targets loop;
            k = 1; 
        }
    }

    foo()
    { 
    }


    foo(bits8 i, bits8 j)
    { 
        bits32  x;
        bits32  y, z;
        invariant bits32  a, z;
    }
}
