BINDIR=/home/lair/olinsky/bin
LIBDIR=/home/lair/olinsky/lib
INCLUDEDIR=include/

CC=gcc
CFLAGS=-g
LDFLAGS=-c
TOOLS=$BINDIR/tools

TOP=..
INTERP=evaluating

<../config/noweb.mk

all:V: interp

doc:V: design.ps state.ps

design.tex: design.inc
	echo "\input{design.inc}" > $target

state.tex: state.inc
    echo "\input{state.inc}" > $target

interp.tex: interp.nw
	$NOWEAVE -delay -autodefs c -index $prereq > $target

clean:V: clean-tex clean-code clean-obj
	rm -f design.tex state.tex bytecode.tex interp.tex intervals.tex opgen.tex interp *~

clean-tex:V:
	rm -f *.blg *.log *.dvi *.inc *.toc *.aux 

clean-code:V:
    rm -f *.m *.h *.i *-dec.c intervals.c encode.c decode.fetch bytecode.sled

clean-obj:V:
    rm -f *.o

#
# source code targets
#
intervals.c: intervals.nw
    $NOTANGLE -L -R$target $prereq > $target

bytecode.sled:D: interp.nw
	$NOTANGLE -L -R$target $prereq > $target

decode.fetch:D: interp.nw
    $NOTANGLE -L -R$target $prereq > $target

machine.h:D: interp.nw
    $NOTANGLE -L -R$target $prereq > $target

encode.c encode.h: bytecode.sled
	$TOOLS -lc-cons-names -encoder encode $prereq

%-dec.c:D: %.m bytecode.sled decode.fetch
	$TOOLS -lc-cons-names -decoder $target -matcher $stem.m \
		bytecode.sled decode.fetch

%.h:D: %.nw
    $NOTANGLE -L -R$target $prereq > $target

%.m:D: interp.nw
    $NOTANGLE -L -R$target $prereq > $target

#
# intermediate preprocessed code (*.i) targets
#
interp-dec.i:D: interp-dec.c interp.h
    $CC -P -E -I$INCLUDEDIR interp-dec.c > $target

#
# object code targets
#
intervals.o: intervals.c intervals.h
    $CC $CFLAGS -c -o $target intervals.c

interp.o: interp-dec.i intervals.h encode.h machine.h
    $CC $CFLAGS -c -o $target interp-dec.i

bcdis.o: bcdis-dec.c
	$CC $CFLAGS -P -E -c -I$INCLUDEDIR -o bcdis-dec.i bcdis-dec.c
	$CC $CFLAGS -c -o $target bcdis-dec.i

%.o: %.c
    $CC $CFLAGS -c -I$INCLUDEDIR -o $target $prereq

cii:V: atom.o mem.o except.o assert.o

#
# operator generator targets (not currently used)
#
opgen:	opgen.icn
	icont -o $target $prereq

%.icn:D: %.nw
	$NOTANGLE -L'#line %-1L "%F"%N' -R$target $prereq > $target

optest:V: opgen
	echo "v1:f32 v2:f32 feq32 -- v1 == v2 : bool" | ./opgen

%-ops.c:D: %.ops opgen
	./opgen $stem.ops > $target

#
# compiled targets
#
interp: interp.o intervals.o encode.o mclib.o cii bcdis.o
    $CC -g -lm -L$LIBDIR -o $target interp.o intervals.o encode.o mclib.o $LIBDIR/liblua.a $LIBDIR/liblualib.a atom.o mem.o except.o assert.o bcdis.o
