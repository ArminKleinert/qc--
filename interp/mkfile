BINDIR=/home/lair/olinsky/bin
LIBDIR=/home/lair/olinsky/lib
INCLUDEDIR=include/

CC=gcc
CFLAGS=-g

TOOLS=$BINDIR/tools
DEPEND=$CC -MM -I$INCLUDEDIR

HDRS=encode.h interp.h machine.h intervals.h runtime.h client.h
SRCS=assert.c atom.c bcdis-dec.c encode.c except.c interp-dec.c intervals.c \
     mclib.c mem.c runtime.c client.c
OBJS=assert.o atom.o bcdis-dec.o encode.o except.o interp-dec.o intervals.o \
     mclib.o mem.o runtime.o client.o

TOP=..
INTERP=evaluating

<../config/noweb.mk

all:V: interp

doc:V: design.ps state.ps

design.tex: design.inc
	echo "\input{design.inc}" > $target

state.tex: state.inc
    echo "\input{state.inc}" > $target

interp.tex: interp.nw
	$NOWEAVE -delay -autodefs c -index $prereq > $target

depend:V: $SRCS $HDRS
    cp mkfile mkfile.bak
    sed '/^# DO NOT DELETE/q' mkfile.bak > mkfile
    $DEPEND $SRCS >> mkfile

clean:V: clean-tex clean-code clean-obj
	rm -f design.tex state.tex bytecode.tex interp.tex intervals.tex opgen.tex interp *~

clean-tex:V:
	rm -f *.blg *.log *.dvi *.inc *.toc *.aux 

clean-code:V:
    rm -f *.m *.h *.i *-dec.c intervals.c encode.c decode.fetch bytecode.sled

clean-obj:V:
    rm -f *.o

#
# source code targets
#
intervals.c: intervals.nw
    $NOTANGLE -L -R$target $prereq > $target

bytecode.sled:D: interp.nw
	$NOTANGLE -L -R$target $prereq > $target

decode.fetch:D: interp.nw
    $NOTANGLE -L -R$target $prereq > $target

machine.h:D: interp.nw
    $NOTANGLE -L -R$target $prereq > $target

encode.c encode.h: bytecode.sled
    $TOOLS -lc-cons-names -encoder encode $prereq

%-dec.c:D: %.m bytecode.sled decode.fetch
    $TOOLS -lc-cons-names -decoder $target -matcher $stem.m \
		bytecode.sled decode.fetch

%.h:D: %.nw
    $NOTANGLE -L -R$target $prereq > $target

%.m:D: interp.nw
    $NOTANGLE -R$target $prereq > $target

#
# intermediate code targets
#
%.i: %.c
    $CC -P -E -I$INCLUDEDIR $stem.c > $stem.i

#
# object code targets
#
%.o: %.c
    $CC $CFLAGS -c -I$INCLUDEDIR -o $target $stem.c

#
# operator generator targets (not currently used)
#
opgen:	opgen.icn
	icont -o $target $prereq

%.icn:D: %.nw
	$NOTANGLE -L'#line %-1L "%F"%N' -R$target $prereq > $target

optest:V: opgen
	echo "v1:f32 v2:f32 feq32 -- v1 == v2 : bool" | ./opgen

%-ops.c:D: %.ops opgen
	./opgen $stem.ops > $target

#
# compiled targets
#
interp: $OBJS
    $CC -g -lm -L$LIBDIR -o $target $OBJS $LIBDIR/liblua.a $LIBDIR/liblualib.a

#
# dependencies 
#
# DO NOT DELETE THIS LINE -- mk depend depends on it
assert.o: assert.c
atom.o: atom.c
bcdis-dec.o: bcdis-dec.c interp.h intervals.h encode.h machine.h
encode.o: encode.c encode.h
except.o: except.c
interp-dec.o: interp-dec.c interp.h intervals.h include/mclib.h \
 encode.h machine.h
intervals.o: intervals.c intervals.h
mclib.o: mclib.c
mem.o: mem.c
runtime.o: runtime.c runtime.h interp.h intervals.h include/mclib.h \
 encode.h machine.h
client.o: client.c client.h interp.h intervals.h include/mclib.h \
 encode.h machine.h runtime.h
