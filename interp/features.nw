% -*- mode: Noweb; noweb-code-mode: c-mode -*- %

This document contains facilities that allow the interpreter to use C language extensions if they are available.

% ----------------------------------------------------------------------------
\interface{Utilizing Extended C Language Features}
% ----------------------------------------------------------------------------

This document ([[features.nw]]) contains header files that allow the
conditional use of C language extensions:

\begin{itemize}

\item 
Header file [[c-features.h : c99]] makes use of ISO C99 language features not 
found in earlier versions of the C language standard.

\item
Header file [[float-features.h : iec60559]] makes use of IEC 60559 
floating-point arithmetic features.

\item
Header file [[c-features.h : no_c99]] is a dummy header file that warns the 
user and performs a no-op anytime a C99-only feature is used.

\item
Header file [[float-features.h : no_iec60559]] is a dummy header file that 
warns the user and performs a no-op anytime an IEC 60559-only feature is used.

\end{itemize}

To enable use of C99 language extensions, the [[c99]] version of
[[c-features.h]] should be extracted from this noweb document; otherwise
the [[no_c99]] version should be extracted.

To enable use of IEC 60559 floating-point extensions, the [[iec60559]] version
of [[float-features.h]] should be extracted from this noweb document; otherwise
the [[no_iec60559]] version should be extracted.

C code should include [[c-features.h]] or [[float-features.h]] as needed.

% ----------------------------------------------------------------------------

\implementation {Utilizing Extended C Language Features}
% ----------------------------------------------------------------------------

% ----------------------------------------------------------------------------
\subsection{C99 Extensions}
% ----------------------------------------------------------------------------

<<c-features.h.c99>>=
#ifndef _C_FEATURES_H
#define _C_FEATURES_H

#define __USE_ISOC99 1

#endif /* _C_FEATURES_H */
@

<<c-features.h.no-c99>>=
#ifndef _C_FEATURES_H
#define _C_FEATURES_H

#include <stdio.h>

#define _C99_NOOP(op) \
fprintf(stderr, "WARNING: C99 operation '%s' not supported; further runtime " \
                "results may be wrong\n" \
              , #op \
       )

#endif /* _C_FEATURES_H */
@


% ----------------------------------------------------------------------------
\subsection{IEC 60559 Extensions}
% ----------------------------------------------------------------------------

<<float-features.h.iec60559>>=
#ifndef _FLOAT_FEATURES_H
#define _FLOAT_FEATURES_H

#include <fenv.h>

#endif /* _FLOAT_FEATURES_H */
@

<<float-features.h.no-iec60559>>=
#ifndef _FLOAT_FEATURES_H
#define _FLOAT_FEATURES_H

#include <stdio.h>

#define _IEC60559_NOOP(op) \
fprintf(stderr, "WARNING: IEC 60559 floating-point operation '%s' " \
                "not supported; further runtime results may be wrong\n" \
              , #op \
       )

#define FE_DOWNWARD   0
#define FE_UPWARD     0
#define FE_TONEAREST  0
#define FE_TOWARDZERO 0
#define INFINITY      0.0

#define fegetround() \
( _IEC60559_NOOP(fegetround) \
, 0 \
)

#define fesetround(X) \
( _IEC60559_NOOP(fesetround) \
, 0 \
)

#define isunordered(X,Y) \
( _IEC60559_NOOP(isunordered) \
, 0 \
)

#define isless(X,Y) \
( _IEC60559_NOOP(isless) \
, 0 \
)

#define isgreater(X,Y) \
( _IEC60559_NOOP(isgreater) \
, 0 \
)

#endif /* _FLOAT_FEATURES_H */
@

% ----------------------------------------------------------------------------
