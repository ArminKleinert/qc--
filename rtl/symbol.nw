
% ------------------------------------------------------------------ 
% Grades     ::=    "%%Grades:" Quality Importance Urgency
% Quality    ::=    A|B|C|D|E
% Importance ::=    Central|Subsystem|Peripheral
% Urgency    ::=    Immediate|Soon|Later
%
% Example (at beginning of line): %%Grades: B Central Soon
\section{Symbol}
% ------------------------------------------------------------------ 

A symbol is a linker-specific representation of a value that is not
known before link time. To allow assemblers to define their
representation locally, we just define a class type.

All that we ask for at the moment, is that a symbol can be observed as a
string.

<<class type t>>=
class type t = object
    method text:    string
end 
@

Since we only define types, interface and implementation are the same.

<<symbol.mli>>=
<<class type t>>
@
<<symbol.ml>>=
<<class type t>>
@

