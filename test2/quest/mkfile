# vim:ts=8 sw=8 noet:
#
# targets
# 
# all		run all tests
# generate	create tests, generate C-- and C files
#

TOP = 		../..
PATH = 		$PATH:/scratch/lindig/lcc	

<$TOP/config/config.mk
<$TOP/config/c.mk

LCC	=	lcc
LCCFLAGS=	-target=c-- -Wf-c--=x86/linux -Wf-c--segLIT=data 

QCMM	=	$TOP/bin/qc--
QCMMFLAGS =	Ld.path=\"$CC\" 

LDFLAGS = 	-L$TOP/runtime -lqc-- $TOP/runtime/pcmap.ld	

QUEST =		quest

# -- rules

%.c--: 		%.c
		$LCC $LCCFLAGS -o $target -S $prereq

%-gcc.o:	%.c
		$CC -g -c -o $target $prereq

%-main-cmm.o:	%-main.c--		
		$QCMM $QCMMFLAGS -globals -c -o $target $prereq

%-callee-cmm.o: %-callee.c--
		$QCMM $QCMMFLAGS -globals -c -o $target $prereq

%-gcc-cmm:	%-callee-gcc.o %-main-cmm.o
		$CC $LDFLAGS -o $target $prereq

%-cmm-gcc:	%-callee-cmm.o %-main-gcc.o
		$CC $LDFLAGS -o $target $prereq

# -- generating

TESTS =		test-0-main test-0-callee	\
		test-1-main test-1-callee	\
		test-2-main test-2-callee	\

TESTS_C =	${TESTS:%=%.c}
TESTS_CMM =	${TESTS:%=%.c--}

$TESTS_C:	
		$QUEST -seed 12345 -lua quest.lua -n 5 -2 -s 0 -o test-0
		$QUEST -seed 12345 -lua quest.lua -n 5 -2 -s 1 -o test-1
		$QUEST -seed 12345 -lua quest.lua -n 5 -2 -s 2 -o test-2
		
EXECS =		test-0-cmm-gcc test-0-gcc-cmm	\
		test-1-cmm-gcc test-1-gcc-cmm	\
		test-2-cmm-gcc test-2-gcc-cmm	\

# -- high-level targets		

all:V:		$EXECS
		for f in $EXECS; do
			./$f || true
		done	

generate:V:	$TESTS_C $TESTS_CMM

clean:V:
		rm -f *.o *-cmm-gcc *-gcc-cmm
clobber:V:	clean
		rm -f *.c-- *.c
