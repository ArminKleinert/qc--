target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
export i@callee_af1 as "callee_af1";
foreign "C" i@callee_af1() {
  stackdata {
  }
  foreign "C" return ("float" bits64[i@av1] aligned 4);
  L.5:
  foreign "C" return();
}
export i@callee_af2 as "callee_af2";
foreign "C" i@callee_af2("float" bits64 f@ap2 aligned 4, bits32 i@bp2 aligned 4, ) {
  stackdata {
  }
  if (%feq(bits64[i@bv2], f@ap2)) { goto L.7; }
  foreign "C" (i@failed)(23 aligned 4);
  L.7:
  if (%eq(bits32[i@cv2], i@bp2)) { goto L.9; }
  foreign "C" (i@failed)(24 aligned 4);
  L.9:
  foreign "C" return (%sx32(bits16[i@av2]) aligned 4);
  L.6:
  foreign "C" return();
}
export i@callee_af3 as "callee_af3";
foreign "C" i@callee_af3(bits32 i@ap3 aligned 4, "float" bits64 f@bp3 aligned 4, "float" bits32 f@cp3 aligned 4, bits32 i@dp3.er aligned 4, ) {
  stackdata {
  }
  bits8 i@dp3;
  i@dp3 = %lobits8(i@dp3.er);
  if (%eq(bits32[i@bv3], i@ap3)) { goto L.12; }
  foreign "C" (i@failed)(40 aligned 4);
  L.12:
  if (%feq(bits64[i@cv3], f@bp3)) { goto L.14; }
  foreign "C" (i@failed)(41 aligned 4);
  L.14:
  if (%feq(bits32[i@dv3], f@cp3)) { goto L.16; }
  foreign "C" (i@failed)(42 aligned 4);
  L.16:
  if (%eq(%sx32(bits8[i@ev3]), %sx32(i@dp3))) { goto L.18; }
  foreign "C" (i@failed)(43 aligned 4);
  L.18:
  foreign "C" return ("float" bits32[i@av3] aligned 4);
  L.11:
  foreign "C" return();
}
export i@callee_af4 as "callee_af4";
foreign "C" i@callee_af4(bits32 i@ap4.er aligned 4, "float" bits64 f@bp4 aligned 4, bits32 i@cp4 aligned 4, bits32 i@dp4 aligned 4, bits32 i@ep4.er aligned 4, bits32 i@fp4.er aligned 4, ) {
  stackdata {
  }
  bits16 i@ap4;
  bits8 i@ep4;
  bits8 i@fp4;
  i@ap4 = %lobits16(%lobits32(i@ap4.er));
  i@ep4 = %lobits8(i@ep4.er);
  i@fp4 = %lobits8(%lobits32(i@fp4.er));
  if (%eq(%zx32(bits16[i@bv4]), %zx32(i@ap4))) { goto L.21; }
  foreign "C" (i@failed)(71 aligned 4);
  L.21:
  if (%feq(bits64[i@cv4], f@bp4)) { goto L.23; }
  foreign "C" (i@failed)(72 aligned 4);
  L.23:
  if (%eq(bits32[i@dv4], i@cp4)) { goto L.25; }
  foreign "C" (i@failed)(73 aligned 4);
  L.25:
  if (%eq(bits32[i@ev4], i@dp4)) { goto L.27; }
  foreign "C" (i@failed)(74 aligned 4);
  L.27:
  if (%eq(%sx32(bits8[i@fv4]), %sx32(i@ep4))) { goto L.29; }
  foreign "C" (i@failed)(75 aligned 4);
  L.29:
  if (%eq(%zx32(bits8[i@gv4]), %zx32(i@fp4))) { goto L.31; }
  foreign "C" (i@failed)(76 aligned 4);
  L.31:
  foreign "C" return (%sx32(bits8[i@av4]) aligned 4);
  L.20:
  foreign "C" return();
}
export i@callee_af5 as "callee_af5";
foreign "C" i@callee_af5() {
  stackdata {
  }
  foreign "C" return ("float" bits32[i@av5] aligned 4);
  L.33:
  foreign "C" return();
}
import bits32 "av5" as i@av5;
import bits32 "gv4" as i@gv4;
import bits32 "fv4" as i@fv4;
import bits32 "ev4" as i@ev4;
import bits32 "dv4" as i@dv4;
import bits32 "cv4" as i@cv4;
import bits32 "bv4" as i@bv4;
import bits32 "av4" as i@av4;
import bits32 "ev3" as i@ev3;
import bits32 "dv3" as i@dv3;
import bits32 "cv3" as i@cv3;
import bits32 "bv3" as i@bv3;
import bits32 "av3" as i@av3;
import bits32 "cv2" as i@cv2;
import bits32 "bv2" as i@bv2;
import bits32 "av2" as i@av2;
import bits32 "av1" as i@av1;
import bits32 "errors" as i@errors;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-0-callee.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
