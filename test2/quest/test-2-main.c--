target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "data" {
export i@errors as "errors";
align 4;
i@errors:
bits32[] {0x0};
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
}
section "data" {
export i@av1 as "av1";
align 4;
i@av1:
bits32[] {0x191d9846};
}
section "text" {
foreign "C" i@caller_bf1() {
  stackdata {
  }
  stackdata {
    align 4;
    i@bv1.8: bits32;
  }
  bits32 i@1.9;
  "address" i@1.9 = foreign "C" (i@callee_af1)();
  bits32[i@bv1.8] = i@1.9;
  if (%eq(%lobits32(bits32[i@av1]), %lobits32(bits32[i@bv1.8]))) { goto L.6; }
  foreign "C" (i@failed)(17 aligned 4);
  L.6:
  L.5:
  foreign "C" return();
}
}
section "data" {
export i@av2 as "av2";
align 4;
i@av2:
bits32[] {0x2a1ac156};
export i@bv2 as "bv2";
align 4;
i@bv2:
bits32[] {0x4709cfec};
}
section "text" {
foreign "C" i@caller_bf2() {
  stackdata {
  }
  stackdata {
    align 4;
    i@cv2.13: bits32;
  }
  bits32 i@1.14;
  "address" i@1.14 = foreign "C" (i@callee_af2)("float" bits32[i@bv2] aligned 4);
  bits32[i@cv2.13] = i@1.14;
  if (%eq(%lobits32(bits32[i@av2]), %lobits32(bits32[i@cv2.13]))) { goto L.11; }
  foreign "C" (i@failed)(26 aligned 4);
  L.11:
  L.10:
  foreign "C" return();
}
}
section "data" {
export i@fv3 as "fv3";
align 4;
i@fv3:
bits32[] {0x479ada12};
bits8[] {0x6c::bits8};
bits8[3];
bits32[] {0x2a5e5bd5};
bits32[] {0xc67381d8, 0x40eddb8b};
export i@lv3 as "lv3";
align 4;
i@lv3:
bits32[] {0xa48b6523, 0x40cec2a5};
bits32[] {0x47367060};
export i@mv3 as "mv3";
align 4;
i@mv3:
bits32[] {0x4746ce59};
export i@nv3 as "nv3";
align 4;
i@nv3:
bits32[] {0x8f9f44d4, 0x40b250aa};
export i@ov3 as "ov3";
align 4;
i@ov3:
bits32[] {0x32c15426};
export i@pv3 as "pv3";
align 4;
i@pv3:
bits32[] {0x276fded7};
export i@qv3 as "qv3";
align 4;
i@qv3:
bits32[] {0x472a7ca2};
}
section "text" {
foreign "C" i@caller_bf3() {
  stackdata {
  }
  stackdata {
    align 4;
    i@rv3.30: bits8[20];
  }
  foreign "C returns struct" (i@callee_af3)("address" i@rv3.30 aligned 4, "struct" bits96[i@lv3] aligned 4, "float" bits32[i@mv3] aligned 4, "struct" bits64[i@nv3] aligned 4, "address" i@ov3 aligned 4, "address" bits32[i@pv3] aligned 4, "float" bits32[i@qv3] aligned 4);
  if (%feq(bits32[i@fv3], bits32[i@rv3.30])) { goto L.16; }
  foreign "C" (i@failed)(64 aligned 4);
  L.16:
  if (%eq(%zx32(bits8[(i@fv3+4)]), %zx32(bits8[(i@rv3.30+4)]))) { goto L.18; }
  foreign "C" (i@failed)(65 aligned 4);
  L.18:
  if (%eq(bits32[(i@fv3+8)], bits32[(i@rv3.30+8)])) { goto L.22; }
  foreign "C" (i@failed)(66 aligned 4);
  L.22:
  if (%feq(bits64[(i@fv3+12)], bits64[(i@rv3.30+12)])) { goto L.26; }
  foreign "C" (i@failed)(67 aligned 4);
  L.26:
  L.15:
  foreign "C" return();
}
}
section "data" {
export i@fv4 as "fv4";
align 4;
i@fv4:
bits8[] {0x3a::bits8};
bits8[3];
bits32[] {0x465241f1};
bits32[] {0xaacab2b};
bits32[] {0x5aabfb2f};
export i@rv4 as "rv4";
align 4;
i@rv4:
bits32[] {0x69e9b165};
export i@sv4 as "sv4";
align 4;
i@sv4:
bits32[] {0x73fb7a5f, 0x40f81239};
export i@tv4 as "tv4";
align 4;
i@tv4:
bits32[] {0x2bc0dcb7};
export i@uv4 as "uv4";
align 4;
i@uv4:
bits32[] {0xe727ed};
export i@vv4 as "vv4";
align 4;
i@vv4:
bits32[] {0x3377be12};
bits8[4];
bits32[] {0x13ccd64a};
bits8[4];
export i@wv4 as "wv4";
align 4;
i@wv4:
bits32[] {0x77141dbc};
export i@xv4 as "xv4";
align 4;
i@xv4:
bits32[] {0x61ca0977};
}
section "text" {
foreign "C" i@caller_bf4() {
  stackdata {
  }
  stackdata {
    align 4;
    i@yv4.48: bits8[16];
  }
  foreign "C returns struct" (i@callee_af4)("address" i@yv4.48 aligned 4, "address" bits32[i@rv4] aligned 4, "address" i@sv4 aligned 4, "address" bits32[i@tv4] aligned 4, "address" i@uv4 aligned 4, "address" i@vv4 aligned 4, "address" bits32[i@wv4] aligned 4, "address" bits32[i@xv4] aligned 4);
  if (%eq(%zx32(bits8[i@fv4]), %zx32(bits8[i@yv4.48]))) { goto L.32; }
  foreign "C" (i@failed)(111 aligned 4);
  L.32:
  if (%feq(bits32[(i@fv4+4)], bits32[(i@yv4.48+4)])) { goto L.34; }
  foreign "C" (i@failed)(112 aligned 4);
  L.34:
  if (%eq(bits32[(i@fv4+8)], bits32[(i@yv4.48+8)])) { goto L.38; }
  foreign "C" (i@failed)(113 aligned 4);
  L.38:
  if (%eq(bits32[((i@fv4+8)+4)], bits32[((i@yv4.48+8)+4)])) { goto L.42; }
  foreign "C" (i@failed)(114 aligned 4);
  L.42:
  L.31:
  foreign "C" return();
}
}
section "data" {
export i@av5 as "av5";
i@av5:
bits8[] {0x3c::bits8};
export i@cv5 as "cv5";
i@cv5:
bits8[] {0x2d::bits8};
export i@dv5 as "dv5";
align 4;
i@dv5:
bits32[] {0xe94ab1d5, 0x40e61bb0};
export i@ev5 as "ev5";
align 4;
i@ev5:
bits32[] {0x54e94a8};
export i@fv5 as "fv5";
align 2;
i@fv5:
bits16[] {0x2b07::bits16};
export i@gv5 as "gv5";
align 4;
i@gv5:
bits32[] {0x17b527e7};
}
section "text" {
foreign "C" i@caller_bf5() {
  stackdata {
  }
  stackdata {
    i@hv5.52: bits8;
  }
  bits32 i@1.53;
  i@1.53 = foreign "C" (i@callee_af5)(%sx32(bits8[i@cv5]) aligned 4, "float" bits64[i@dv5] aligned 4, "struct" bits32[i@ev5] aligned 4, %sx32(bits16[i@fv5]) aligned 4, "address" bits32[i@gv5] aligned 4);
  bits8[i@hv5.52] = %lobits8(%lobits32(i@1.53));
  if (%eq(%zx32(bits8[i@av5]), %zx32(bits8[i@hv5.52]))) { goto L.50; }
  foreign "C" (i@failed)(143 aligned 4);
  L.50:
  L.49:
  foreign "C" return();
}
export i@main as "main";
foreign "C" i@main(bits32 i@argc aligned 4, "address" bits32 i@argv aligned 4, ) {
  stackdata {
  }
  foreign "C" (i@caller_bf1)();
  foreign "C" (i@caller_bf2)();
  foreign "C" (i@caller_bf3)();
  foreign "C" (i@caller_bf4)();
  foreign "C" (i@caller_bf5)();
  foreign "C" return (bits32[i@errors] aligned 4);
  L.54:
  foreign "C" return();
}
import bits32 "callee_af5" as i@callee_af5;
import bits32 "callee_af4" as i@callee_af4;
import bits32 "callee_af3" as i@callee_af3;
import bits32 "callee_af2" as i@callee_af2;
import bits32 "callee_af1" as i@callee_af1;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-2-main.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
