target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "data" {
export i@errors as "errors";
align 4;
i@errors:
bits32[] {0x0};
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
}
section "data" {
export i@av1 as "av1";
align 4;
i@av1:
bits32[] {0x191d9846};
}
section "text" {
foreign "C" i@caller_bf1() {
  stackdata {
  }
  stackdata {
    align 4;
    i@bv1.8: bits32;
  }
  bits32 i@1.9;
  "address" i@1.9 = foreign "C" (i@callee_af1)();
  bits32[i@bv1.8] = i@1.9;
  if (%eq(%lobits32(bits32[i@av1]), %lobits32(bits32[i@bv1.8]))) { goto L.6; }
  foreign "C" (i@failed)(17 aligned 4);
  L.6:
  L.5:
  foreign "C" return();
}
}
section "data" {
export i@av2 as "av2";
align 4;
i@av2:
bits32[] {0x2a1ac156};
export i@bv2 as "bv2";
align 4;
i@bv2:
bits32[] {0x4709cfec};
}
section "text" {
foreign "C" i@caller_bf2() {
  stackdata {
  }
  stackdata {
    align 4;
    i@cv2.13: bits32;
  }
  bits32 i@1.14;
  "address" i@1.14 = foreign "C" (i@callee_af2)("float" bits32[i@bv2] aligned 4);
  bits32[i@cv2.13] = i@1.14;
  if (%eq(%lobits32(bits32[i@av2]), %lobits32(bits32[i@cv2.13]))) { goto L.11; }
  foreign "C" (i@failed)(26 aligned 4);
  L.11:
  L.10:
  foreign "C" return();
}
}
section "data" {
export i@cv3 as "cv3";
align 4;
i@cv3:
bits32[] {0x473b47d2};
bits32[] {0x478bbae5};
export i@fv3 as "fv3";
align 4;
i@fv3:
bits32[] {0x47a47ba8};
bits8[] {0x32::bits8};
bits8[3];
export i@gv3 as "gv3";
align 4;
i@gv3:
bits32[] {0x242d05f3, 0x40f44b90};
export i@hv3 as "hv3";
align 4;
i@hv3:
bits32[] {0x67ce35b};
export i@iv3 as "iv3";
align 4;
i@iv3:
bits32[] {0x4755cf3f};
}
section "text" {
foreign "C" i@caller_bf3() {
  stackdata {
  }
  stackdata {
    align 4;
    i@jv3.22: bits8[8];
  }
  foreign "C returns struct" (i@callee_af3)("address" i@jv3.22 aligned 4, "struct" bits64[i@fv3] aligned 4, "float" bits64[i@gv3] aligned 4, "address" i@hv3 aligned 4, "address" i@iv3 aligned 4);
  if (%feq(bits32[i@cv3], bits32[i@jv3.22])) { goto L.16; }
  foreign "C" (i@failed)(44 aligned 4);
  L.16:
  if (%feq(bits32[(i@cv3+4)], bits32[(i@jv3.22+4)])) { goto L.18; }
  foreign "C" (i@failed)(45 aligned 4);
  L.18:
  L.15:
  foreign "C" return();
}
}
section "data" {
export i@av4 as "av4";
align 4;
i@av4:
bits32[] {0x163a3d3b};
export i@dv4 as "dv4";
align 4;
i@dv4:
bits32[] {0x4636bc68};
export i@ev4 as "ev4";
align 4;
i@ev4:
bits32[] {0x565dad66};
export i@fv4 as "fv4";
align 4;
i@fv4:
bits32[] {0x3d5cc9ac};
export i@gv4 as "gv4";
align 4;
i@gv4:
bits32[] {0x4584512d};
export i@hv4 as "hv4";
align 4;
i@hv4:
bits32[] {0x6f586732};
export i@iv4 as "iv4";
align 4;
i@iv4:
bits32[] {0x4f5e9fb0};
}
section "text" {
foreign "C" i@caller_bf4() {
  stackdata {
  }
  stackdata {
    align 4;
    i@jv4.26: bits32;
  }
  bits32 i@1.27;
  "address" i@1.27 = foreign "C" (i@callee_af4)("struct" bits32[i@dv4] aligned 4, "address" bits32[i@ev4] aligned 4, "address" bits32[i@fv4] aligned 4, "float" bits32[i@gv4] aligned 4, "address" bits32[i@hv4] aligned 4, "address" bits32[i@iv4] aligned 4);
  bits32[i@jv4.26] = i@1.27;
  if (%eq(%lobits32(bits32[i@av4]), %lobits32(bits32[i@jv4.26]))) { goto L.24; }
  foreign "C" (i@failed)(76 aligned 4);
  L.24:
  L.23:
  foreign "C" return();
}
}
section "data" {
export i@bv5 as "bv5";
align 2;
i@bv5:
bits16[] {0x2b2b::bits16};
export i@iv5 as "iv5";
align 4;
i@iv5:
bits32[] {0x4679b3c5};
bits8[] {0x6b::bits8};
bits8[3];
bits32[] {0x4d355351};
export i@jv5 as "jv5";
align 4;
i@jv5:
bits32[] {0xeed8904f, 0x40f16f6e};
export i@kv5 as "kv5";
align 4;
i@kv5:
bits32[] {0x7a2b1ddd};
export i@lv5 as "lv5";
align 4;
i@lv5:
bits32[] {0x159ad1f3};
export i@mv5 as "mv5";
align 4;
i@mv5:
bits32[] {0x65e62774};
export i@nv5 as "nv5";
align 4;
i@nv5:
bits32[] {0x2df4b8ab};
}
section "text" {
foreign "C" i@caller_bf5() {
  stackdata {
  }
  stackdata {
    align 2;
    i@ov5.31: bits8[2];
  }
  foreign "C returns struct" (i@callee_af5)("address" i@ov5.31 aligned 4, "struct" bits96[i@iv5] aligned 4, "struct" bits64[i@jv5] aligned 4, bits32[i@kv5] aligned 4, "address" bits32[i@lv5] aligned 4, "address" bits32[i@mv5] aligned 4, "address" bits32[i@nv5] aligned 4);
  if (%eq(%sx32(bits16[i@bv5]), %sx32(bits16[i@ov5.31]))) { goto L.29; }
  foreign "C" (i@failed)(108 aligned 4);
  L.29:
  L.28:
  foreign "C" return();
}
export i@main as "main";
foreign "C" i@main(bits32 i@argc aligned 4, "address" bits32 i@argv aligned 4, ) {
  stackdata {
  }
  foreign "C" (i@caller_bf1)();
  foreign "C" (i@caller_bf2)();
  foreign "C" (i@caller_bf3)();
  foreign "C" (i@caller_bf4)();
  foreign "C" (i@caller_bf5)();
  foreign "C" return (bits32[i@errors] aligned 4);
  L.32:
  foreign "C" return();
}
import bits32 "callee_af5" as i@callee_af5;
import bits32 "callee_af4" as i@callee_af4;
import bits32 "callee_af3" as i@callee_af3;
import bits32 "callee_af2" as i@callee_af2;
import bits32 "callee_af1" as i@callee_af1;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-1-main.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
