target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "text" {
foreign "C" i@failed(bits32 i@line, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2, "address" i@3, i@line);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
foreign "C" return();
}
export i@callee_af1 as "callee_af1";
foreign "C" i@callee_af1() {
  stackdata {
  }
  foreign "C" return ("address" bits32[i@av1]);
  L.5:
foreign "C" return();
}
export i@callee_af2 as "callee_af2";
foreign "C" i@callee_af2("float" bits32 f@ap2, ) {
  stackdata {
  }
  if (%feq(bits32[i@bv2], f@ap2)) { goto L.7; }
  foreign "C" (i@failed)(20);
  L.7:
  foreign "C" return ("address" bits32[i@av2]);
  L.6:
foreign "C" return();
}
export i@callee_af3 as "callee_af3";
foreign "C" i@callee_af3("address" bits32 i@10, "address" bits32 i@ap3, "float" bits64 f@bp3, "address" bits32 i@cp3, "address" bits32 i@dp3, ) {
  stackdata {
  }
  if (%feq(bits32[i@fv3], bits32[i@ap3])) { goto L.11; }
  foreign "C" (i@failed)(35);
  L.11:
  if (%eq(%sx32(bits8[(i@fv3+4)]), %sx32(bits8[%add(i@ap3,4)]))) { goto L.13; }
  foreign "C" (i@failed)(36);
  L.13:
  if (%feq(bits64[i@gv3], f@bp3)) { goto L.16; }
  foreign "C" (i@failed)(37);
  L.16:
  if (%eq(bits32[i@hv3], bits32[i@cp3])) { goto L.18; }
  foreign "C" (i@failed)(38);
  L.18:
  if (%feq(bits32[i@iv3], bits32[i@dp3])) { goto L.20; }
  foreign "C" (i@failed)(39);
  L.20:
  bits32 i@.blkcopy.22, i@.blkcopy.23;
  i@.blkcopy.22 = bits32[i@cv3];
  i@.blkcopy.23 = bits32[i@cv3+4];
  bits32[i@10] = i@.blkcopy.22;
  bits32[i@10+4] = i@.blkcopy.23;
  L.9:
foreign "C" return();
}
export i@callee_af4 as "callee_af4";
foreign "C" i@callee_af4("address" bits32 i@ap4, "address" bits32 i@bp4, "address" bits32 i@cp4, "float" bits32 f@dp4, "address" bits32 i@ep4, "address" bits32 i@fp4, ) {
  stackdata {
  }
  if (%feq(bits32[i@dv4], bits32[i@ap4])) { goto L.25; }
  foreign "C" (i@failed)(67);
  L.25:
  if (%eq(%lobits32(bits32[i@ev4]), %lobits32(i@bp4))) { goto L.27; }
  foreign "C" (i@failed)(68);
  L.27:
  if (%eq(%lobits32(bits32[i@fv4]), %lobits32(i@cp4))) { goto L.29; }
  foreign "C" (i@failed)(69);
  L.29:
  if (%feq(bits32[i@gv4], f@dp4)) { goto L.31; }
  foreign "C" (i@failed)(70);
  L.31:
  if (%eq(%lobits32(bits32[i@hv4]), %lobits32(i@ep4))) { goto L.33; }
  foreign "C" (i@failed)(71);
  L.33:
  if (%eq(%lobits32(bits32[i@iv4]), %lobits32(i@fp4))) { goto L.35; }
  foreign "C" (i@failed)(72);
  L.35:
  foreign "C" return ("address" bits32[i@av4]);
  L.24:
foreign "C" return();
}
export i@callee_af5 as "callee_af5";
foreign "C" i@callee_af5("address" bits32 i@38, "address" bits32 i@ap5, "address" bits32 i@bp5, bits32 i@cp5, "address" bits32 i@dp5, "address" bits32 i@ep5, "address" bits32 i@fp5, ) {
  stackdata {
  }
  if (%feq(bits32[i@iv5], bits32[i@ap5])) { goto L.39; }
  foreign "C" (i@failed)(100);
  L.39:
  if (%eq(%zx32(bits8[(i@iv5+4)]), %zx32(bits8[%add(i@ap5,4)]))) { goto L.41; }
  foreign "C" (i@failed)(101);
  L.41:
  if (%eq(bits32[(i@iv5+8)], bits32[%add(i@ap5,8)])) { goto L.44; }
  foreign "C" (i@failed)(102);
  L.44:
  if (%feq(bits64[i@jv5], bits64[i@bp5])) { goto L.47; }
  foreign "C" (i@failed)(103);
  L.47:
  if (%eq(bits32[i@kv5], i@cp5)) { goto L.49; }
  foreign "C" (i@failed)(104);
  L.49:
  if (%eq(%lobits32(bits32[i@lv5]), %lobits32(i@dp5))) { goto L.51; }
  foreign "C" (i@failed)(105);
  L.51:
  if (%eq(%lobits32(bits32[i@mv5]), %lobits32(i@ep5))) { goto L.53; }
  foreign "C" (i@failed)(106);
  L.53:
  if (%eq(%lobits32(bits32[i@nv5]), %lobits32(i@fp5))) { goto L.55; }
  foreign "C" (i@failed)(107);
  L.55:
  bits32 i@.blkcopy.57, i@.blkcopy.58;
  i@.blkcopy.57 = %sx32(bits16[i@bv5]);
  bits16[i@38] = %lobits16(i@.blkcopy.57);
  L.37:
foreign "C" return();
}
import bits32 "nv5" as i@nv5;
import bits32 "mv5" as i@mv5;
import bits32 "lv5" as i@lv5;
import bits32 "kv5" as i@kv5;
import bits32 "jv5" as i@jv5;
import bits32 "iv5" as i@iv5;
import bits32 "bv5" as i@bv5;
import bits32 "iv4" as i@iv4;
import bits32 "hv4" as i@hv4;
import bits32 "gv4" as i@gv4;
import bits32 "fv4" as i@fv4;
import bits32 "ev4" as i@ev4;
import bits32 "dv4" as i@dv4;
import bits32 "av4" as i@av4;
import bits32 "iv3" as i@iv3;
import bits32 "hv3" as i@hv3;
import bits32 "gv3" as i@gv3;
import bits32 "fv3" as i@fv3;
import bits32 "cv3" as i@cv3;
import bits32 "bv2" as i@bv2;
import bits32 "av2" as i@av2;
import bits32 "av1" as i@av1;
import bits32 "errors" as i@errors;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-1-callee.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
