target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
export i@callee_af1 as "callee_af1";
foreign "C" i@callee_af1() {
  stackdata {
  }
  foreign "C" return ("address" bits32[i@av1] aligned 4);
  L.5:
  foreign "C" return();
}
export i@callee_af2 as "callee_af2";
foreign "C" i@callee_af2("float" bits32 f@ap2 aligned 4, ) {
  stackdata {
  }
  if (%feq(bits32[i@bv2], f@ap2)) { goto L.7; }
  foreign "C" (i@failed)(20 aligned 4);
  L.7:
  foreign "C" return ("address" bits32[i@av2] aligned 4);
  L.6:
  foreign "C" return();
}
export i@callee_af3 as "callee_af3";
foreign "C returns struct" i@callee_af3("address" bits32 i@10 aligned 4, "struct" bits64 i@ap3.er aligned 4, "float" bits64 f@bp3 aligned 4, "address" bits32 i@cp3 aligned 4, "address" bits32 i@dp3 aligned 4, ) {
  stackdata {
    align 4;
    i@ap3: bits8[8];
  }
  bits64[i@ap3 aligned 4] = i@ap3.er;
  if (%feq(bits32[i@fv3], bits32[i@ap3])) { goto L.11; }
  foreign "C" (i@failed)(35 aligned 4);
  L.11:
  if (%eq(%sx32(bits8[(i@fv3+4)]), %sx32(bits8[(i@ap3+4)]))) { goto L.13; }
  foreign "C" (i@failed)(36 aligned 4);
  L.13:
  if (%feq(bits64[i@gv3], f@bp3)) { goto L.17; }
  foreign "C" (i@failed)(37 aligned 4);
  L.17:
  if (%eq(bits32[i@hv3], bits32[i@cp3])) { goto L.19; }
  foreign "C" (i@failed)(38 aligned 4);
  L.19:
  if (%feq(bits32[i@iv3], bits32[i@dp3])) { goto L.21; }
  foreign "C" (i@failed)(39 aligned 4);
  L.21:
  bits64[i@10 aligned 4] = bits64[i@cv3 aligned 4];
  L.9:
  foreign "C returns struct" return();
}
export i@callee_af4 as "callee_af4";
foreign "C" i@callee_af4("struct" bits32 i@ap4.er aligned 4, "address" bits32 i@bp4 aligned 4, "address" bits32 i@cp4 aligned 4, "float" bits32 f@dp4 aligned 4, "address" bits32 i@ep4 aligned 4, "address" bits32 i@fp4 aligned 4, ) {
  stackdata {
    align 4;
    i@ap4: bits8[4];
  }
  bits32[i@ap4 aligned 4] = i@ap4.er;
  if (%feq(bits32[i@dv4], bits32[i@ap4])) { goto L.24; }
  foreign "C" (i@failed)(67 aligned 4);
  L.24:
  if (%eq(%lobits32(bits32[i@ev4]), %lobits32(i@bp4))) { goto L.26; }
  foreign "C" (i@failed)(68 aligned 4);
  L.26:
  if (%eq(%lobits32(bits32[i@fv4]), %lobits32(i@cp4))) { goto L.28; }
  foreign "C" (i@failed)(69 aligned 4);
  L.28:
  if (%feq(bits32[i@gv4], f@dp4)) { goto L.30; }
  foreign "C" (i@failed)(70 aligned 4);
  L.30:
  if (%eq(%lobits32(bits32[i@hv4]), %lobits32(i@ep4))) { goto L.32; }
  foreign "C" (i@failed)(71 aligned 4);
  L.32:
  if (%eq(%lobits32(bits32[i@iv4]), %lobits32(i@fp4))) { goto L.34; }
  foreign "C" (i@failed)(72 aligned 4);
  L.34:
  foreign "C" return ("address" bits32[i@av4] aligned 4);
  L.23:
  foreign "C" return();
}
export i@callee_af5 as "callee_af5";
foreign "C returns struct" i@callee_af5("address" bits32 i@37 aligned 4, "struct" bits96 i@ap5.er aligned 4, "struct" bits64 i@bp5.er aligned 4, bits32 i@cp5 aligned 4, "address" bits32 i@dp5 aligned 4, "address" bits32 i@ep5 aligned 4, "address" bits32 i@fp5 aligned 4, ) {
  stackdata {
    align 4;
    i@ap5: bits8[12];
    align 4;
    i@bp5: bits8[8];
  }
  bits96[i@ap5 aligned 4] = i@ap5.er;
  bits64[i@bp5 aligned 4] = i@bp5.er;
  if (%feq(bits32[i@iv5], bits32[i@ap5])) { goto L.38; }
  foreign "C" (i@failed)(100 aligned 4);
  L.38:
  if (%eq(%zx32(bits8[(i@iv5+4)]), %zx32(bits8[(i@ap5+4)]))) { goto L.40; }
  foreign "C" (i@failed)(101 aligned 4);
  L.40:
  if (%eq(bits32[(i@iv5+8)], bits32[(i@ap5+8)])) { goto L.44; }
  foreign "C" (i@failed)(102 aligned 4);
  L.44:
  if (%feq(bits64[i@jv5], bits64[i@bp5])) { goto L.48; }
  foreign "C" (i@failed)(103 aligned 4);
  L.48:
  if (%eq(bits32[i@kv5], i@cp5)) { goto L.50; }
  foreign "C" (i@failed)(104 aligned 4);
  L.50:
  if (%eq(%lobits32(bits32[i@lv5]), %lobits32(i@dp5))) { goto L.52; }
  foreign "C" (i@failed)(105 aligned 4);
  L.52:
  if (%eq(%lobits32(bits32[i@mv5]), %lobits32(i@ep5))) { goto L.54; }
  foreign "C" (i@failed)(106 aligned 4);
  L.54:
  if (%eq(%lobits32(bits32[i@nv5]), %lobits32(i@fp5))) { goto L.56; }
  foreign "C" (i@failed)(107 aligned 4);
  L.56:
  bits16[i@37 aligned 2] = bits16[i@bv5 aligned 2];
  L.36:
  foreign "C returns struct" return();
}
import bits32 "nv5" as i@nv5;
import bits32 "mv5" as i@mv5;
import bits32 "lv5" as i@lv5;
import bits32 "kv5" as i@kv5;
import bits32 "jv5" as i@jv5;
import bits32 "iv5" as i@iv5;
import bits32 "bv5" as i@bv5;
import bits32 "iv4" as i@iv4;
import bits32 "hv4" as i@hv4;
import bits32 "gv4" as i@gv4;
import bits32 "fv4" as i@fv4;
import bits32 "ev4" as i@ev4;
import bits32 "dv4" as i@dv4;
import bits32 "av4" as i@av4;
import bits32 "iv3" as i@iv3;
import bits32 "hv3" as i@hv3;
import bits32 "gv3" as i@gv3;
import bits32 "fv3" as i@fv3;
import bits32 "cv3" as i@cv3;
import bits32 "bv2" as i@bv2;
import bits32 "av2" as i@av2;
import bits32 "av1" as i@av1;
import bits32 "errors" as i@errors;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-1-callee.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
