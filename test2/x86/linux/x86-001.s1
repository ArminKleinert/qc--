.data
/* memory for global registers */
.align 8
Cmm_private_global_area:
.text
.text
p:
nop
movl %eax,%ebx
movl (%eax),%ecx
movl %ecx,%ebx
movl %eax,(%ebx)
movl (%eax),%ecx
movl %ecx,(%ebx)
movsbl (%eax),%ecx
movl %ecx,%ebx
movswl (%eax),%ecx
movl %ecx,%ebx
movzbl (%eax),%ecx
movl %ecx,%ebx
movzwl (%eax),%ecx
movl %ecx,%ebx
movw %ax,(%ebx)
movb %al,(%ebx)
movl %eax,%ecx
addl %eax,%ecx
movl %ecx,%ebx
movl %eax,%ecx
subl %eax,%ecx
movl %ecx,%ebx
movl %eax,%ecx
andl %eax,%ecx
movl %ecx,%ebx
movl %eax,%ecx
orl %eax,%ecx
movl %ecx,%ebx
movl %eax,%ecx
xorl %eax,%ecx
movl %ecx,%ebx
movl (%eax),%ecx
addl %eax,%ecx
movl %ecx,%ebx
movl (%eax),%ecx
subl %eax,%ecx
movl %ecx,%ebx
movl (%eax),%ecx
andl %eax,%ecx
movl %ecx,%ebx
movl (%eax),%ecx
orl %eax,%ecx
movl %ecx,%ebx
movl (%eax),%ecx
xorl %eax,%ecx
movl %ecx,%ebx
movl (%eax),%edx
movl %eax,%ecx
addl %edx,%ecx
movl %ecx,%ebx
movl (%eax),%edx
movl %eax,%ecx
subl %edx,%ecx
movl %ecx,%ebx
movl (%eax),%edx
movl %eax,%ecx
andl %edx,%ecx
movl %ecx,%ebx
movl (%eax),%edx
movl %eax,%ecx
orl %edx,%ecx
movl %ecx,%ebx
movl (%eax),%edx
movl %eax,%ecx
xorl %edx,%ecx
movl %ecx,%ebx
movl (%eax),%edx
movl %eax,%ecx
addl %edx,%ecx
movl %ecx,(%ebx)
movl (%eax),%ecx
movl %eax,%edx
subl %ecx,%edx
movl %edx,(%ebx)
movl (%eax),%ecx
movl %eax,%edx
andl %ecx,%edx
movl %edx,(%ebx)
movl (%eax),%ecx
movl %eax,%edx
orl %ecx,%edx
movl %edx,(%ebx)
movl (%eax),%ecx
movl %eax,%edx
xorl %ecx,%edx
movl %edx,(%ebx)
cmpl %eax,%eax
jl p_l11
jmp p_l12
jmp p_l11
p_l12:
jmp p_l10
p_l11:
jmp L
p_l10:
cmpl %eax,%eax
jle p_l8
jmp p_l9
L:
movl $99,%eax
movl %eax,0(%esp)
movl $0,%ecx
movl $0,%edx
movl $64,%ebx
movl %esp,%eax
addl %ebx,%eax
addl %edx,%eax
addl %ecx,%eax
movl 0(%esp),%ecx
movl %ecx,(%eax)
ret
jmp p_l8
p_l9:
jmp p_l7
nop
nop
p_l8:
jmp L
p_l7:
cmpl %eax,%eax
jbe p_l5
jmp p_l6
jmp p_l5
p_l6:
jmp p_l4
p_l5:
jmp L
p_l4:
jmp L
