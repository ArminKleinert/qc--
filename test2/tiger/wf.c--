target byteorder little memsize 8 wordsize 32 pointersize 32;
import bits32 "tig_not" as not;
import bits32 "tig_chr" as chr;
import bits32 "tig_sizea" as sizea;
import bits32 "tig_substring" as substring;
import bits32 "tig_concat" as concat;
import bits32 "tig_flush" as flush;
import bits32 "tig_ord" as ord;
import bits32 "tig_exit" as exit;
import bits32 "tig_print" as print;
import bits32 "tig_printi" as printi;
import bits32 "tig_getchar" as getchar;
import bits32 "tig_size" as size;
import bits32 "tig_alloc" as alloc;
import bits32 "tig_gc" as gc;
import bits32 "tig_compare_str" as compare_str;
import bits32 "tig_bounds_check" as bounds_check;
export tiger_main;
section "data" {
align 32;
gc_data: bits32 { 0 };
  bits32 { 5 };
  Lgbl_88: bits32 { 0 }; bits8[] "\000";
  bits32 { 6 };
  Lgbl_74: bits32 { 1 }; bits8[] "z\000";
  bits32 { 6 };
  Lgbl_67: bits32 { 1 }; bits8[] "A\000";
  bits32 { 6 };
  Lgbl_62: bits32 { 1 }; bits8[] "\t\000";
  bits32 { 7 };
  Lgbl_41: bits32 { 2 }; bits8[] "? \000";
  bits32 { 6 };
  Lgbl_69: bits32 { 1 }; bits8[] "Z\000";
  bits32 { 6 };
  Lgbl_42: bits32 { 1 }; bits8[] "\n\000";
  bits32 { 6 };
  Lgbl_68: bits32 { 1 }; bits8[] "a\000";
}

section "text" {
span 1 err_35_gc_data {
 err_35(bits32 pfp,bits32 s) { /* level 2, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = s;
  bits32 temp_43;
  foreign"C" print(Lgbl_41) also cuts to killer;
  foreign"C" print(bits32[%add(fp, 4)]) also cuts to killer;
  foreign"C" print(Lgbl_42) also cuts to killer;
  temp_43 = foreign"C" exit(1) also cuts to killer;
  return(temp_43);
 continuation killer():
 return(0);
}}}
section "data" {
 err_35_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 3, 1,1,0 };
}

section "text" {
span 1 insert_44_gc_data {
 insert_44(bits32 pfp,bits32 p) { /* level 3, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = p;
  bits32 temp_60;
  bits32 temp_109;
  bits32 temp_48;
  bits32 temp_110;
  bits32 temp_111;
  bits32 temp_52;
  bits32 temp_112;
  bits32 temp_56;
  bits32 temp_45;
  if (%sx32(%bit(%eq(bits32[%add(fp, 4)], 0))) !=0) { goto LifTrue_57; } else { goto LifFalse_58; }
  LifTrue_57: /* line 1  col 0 */
  temp_45 = foreign"C" alloc(16) also cuts to killer;
  bits32[%add(temp_45, 0)] = 1;
  bits32[%add(temp_45, 4)] = 0;
  bits32[%add(temp_45, 8)] = 0;
  bits32[%add(temp_45, 12)] = bits32[%add(bits32[fp], 4)];
  temp_56 = temp_45;
  goto LifEnd_59;
  LifFalse_58: /* line 1  col 0 */
  temp_112 = foreign"C" compare_str(bits32[%add(bits32[fp], 4)],bits32[%add(bits32[%add(fp, 4)], 12)]) also cuts to killer;
  if (%sx32(%bit(%eq(temp_112, 0))) !=0) { goto LifTrue_53; } else { goto LifFalse_54; }
  LifTrue_53: /* line 1  col 0 */
  bits32[%add(bits32[%add(fp, 4)], 0)] = %add(bits32[%add(bits32[%add(fp, 4)], 0)], 1);
  temp_52 = bits32[%add(fp, 4)];
  goto LifEnd_55;
  LifFalse_54: /* line 1  col 0 */
  temp_111 = foreign"C" compare_str(bits32[%add(bits32[fp], 4)],bits32[%add(bits32[%add(fp, 4)], 12)]) also cuts to killer;
  if (%sx32(%bit(%lt(temp_111, 0))) !=0) { goto LifTrue_49; } else { goto LifFalse_50; }
  LifTrue_49: /* line 1  col 0 */
  temp_110 =  insert_44(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 4)]);
  bits32[%add(bits32[%add(fp, 4)], 4)] = temp_110;
  temp_48 = bits32[%add(fp, 4)];
  goto LifEnd_51;
  LifFalse_50: /* line 1  col 0 */
  temp_109 =  insert_44(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 8)]);
  bits32[%add(bits32[%add(fp, 4)], 8)] = temp_109;
  temp_48 = bits32[%add(fp, 4)];
  LifEnd_51: /* line 1  col 0 */
  temp_52 = temp_48;
  LifEnd_55: /* line 1  col 0 */
  temp_56 = temp_52;
  LifEnd_59: /* line 1  col 0 */
  temp_60 = temp_56;
  return(temp_60);
 continuation killer():
 return(0);
}}}
section "data" {
 insert_44_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 11, 1,1,1,1,1,1,0,1,0,1,1 };
}

section "text" {
span 1 add_word_36_gc_data {
 add_word_36(bits32 pfp,bits32 word) { /* level 2, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = word;
  bits32 temp_61;
  bits32 temp_113;
  temp_113 =  insert_44(fp,bits32[%add(bits32[fp], 4)]);
  bits32[%add(bits32[fp], 4)] = temp_113;
  temp_61 = 0;
  return(temp_61);
 continuation killer():
 return(0);
}}}
section "data" {
 add_word_36_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 4, 1,1,0,1 };
}

section "text" {
span 1 tprint_37_gc_data {
 tprint_37(bits32 pfp,bits32 tree) { /* level 2, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = tree;
  bits32 temp_66;
  if (%sx32(%bit(%ne(bits32[%add(fp, 4)], 0))) !=0) { goto LifTrue_63; } else { goto LifFalse_64; }
  LifTrue_63: /* line 1  col 0 */
   tprint_37(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 4)]);
  foreign"C" printi(bits32[%add(bits32[%add(fp, 4)], 0)]) also cuts to killer;
  foreign"C" print(Lgbl_62) also cuts to killer;
  foreign"C" print(bits32[%add(bits32[%add(fp, 4)], 12)]) also cuts to killer;
  foreign"C" print(Lgbl_42) also cuts to killer;
   tprint_37(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 8)]);
  goto LifEnd_65;
  LifFalse_64: /* line 1  col 0 */
  LifEnd_65: /* line 1  col 0 */
  temp_66 = 0;
  return(temp_66);
 continuation killer():
 return(0);
}}}
section "data" {
 tprint_37_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 3, 1,1,0 };
}

section "text" {
span 1 isletter_38_gc_data {
 isletter_38(bits32 pfp,bits32 c) { /* level 2, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = c;
  bits32 temp_87;
  bits32 temp_79;
  bits32 temp_75;
  bits32 temp_114;
  bits32 temp_115;
  bits32 temp_83;
  bits32 temp_119;
  bits32 temp_120;
  bits32 temp_117;
  bits32 temp_118;
  bits32 temp_116;
  bits32 temp_70;
  bits32 temp_121;
  bits32 temp_122;
  temp_122 = foreign"C" compare_str(bits32[%add(fp, 4)],Lgbl_67) also cuts to killer;
  if (%sx32(%bit(%ge(temp_122, 0))) !=0) { goto LifTrue_71; } else { goto LifFalse_72; }
  LifTrue_71: /* line 1  col 0 */
  temp_121 = foreign"C" compare_str(bits32[%add(fp, 4)],Lgbl_69) also cuts to killer;
  temp_70 = %sx32(%bit(%le(temp_121, 0)));
  goto LifEnd_73;
  LifFalse_72: /* line 1  col 0 */
  temp_70 = 0;
  LifEnd_73: /* line 1  col 0 */
  if (temp_70 !=0) { goto LifTrue_84; } else { goto LifFalse_85; }
  LifTrue_84: /* line 1  col 0 */
  temp_116 = foreign"C" ord(bits32[%add(fp, 4)]) also cuts to killer;
  temp_118 = temp_116;
  temp_117 = foreign"C" ord(Lgbl_68) also cuts to killer;
  temp_120 = %add(temp_118, temp_117);
  temp_119 = foreign"C" ord(Lgbl_67) also cuts to killer;
  temp_83 = %sub(temp_120, temp_119);
  goto LifEnd_86;
  LifFalse_85: /* line 1  col 0 */
  temp_115 = foreign"C" compare_str(bits32[%add(fp, 4)],Lgbl_68) also cuts to killer;
  if (%sx32(%bit(%ge(temp_115, 0))) !=0) { goto LifTrue_76; } else { goto LifFalse_77; }
  LifTrue_76: /* line 1  col 0 */
  temp_114 = foreign"C" compare_str(bits32[%add(fp, 4)],Lgbl_74) also cuts to killer;
  temp_75 = %sx32(%bit(%le(temp_114, 0)));
  goto LifEnd_78;
  LifFalse_77: /* line 1  col 0 */
  temp_75 = 0;
  LifEnd_78: /* line 1  col 0 */
  if (temp_75 !=0) { goto LifTrue_80; } else { goto LifFalse_81; }
  LifTrue_80: /* line 1  col 0 */
  temp_79 = foreign"C" ord(bits32[%add(fp, 4)]) also cuts to killer;
  goto LifEnd_82;
  LifFalse_81: /* line 1  col 0 */
  temp_79 = 0;
  LifEnd_82: /* line 1  col 0 */
  temp_83 = temp_79;
  LifEnd_86: /* line 1  col 0 */
  temp_87 = temp_83;
  return(temp_87);
 continuation killer():
 return(0);
}}}
section "data" {
 isletter_38_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 16, 1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
}

section "text" {
span 1 getword_39_gc_data {
 getword_39(bits32 pfp) { /* level 2, stack 3 */
  stackdata { align 32; fp : bits32[3]; }
  bits32[fp+0] = pfp;
  bits32 temp_103;
  bits32 temp_131;
  bits32 temp_127;
  bits32 temp_128;
  bits32 temp_129;
  bits32 temp_130;
  bits32 temp_97;
  bits32 temp_132;
  bits32 temp_124;
  bits32 temp_90;
  bits32 temp_125;
  bits32 temp_126;
  bits32 temp_123;
  bits32[%add(fp, 4)] = Lgbl_88;
  bits32[%add(fp, 8)] = Lgbl_88;
  temp_123 = foreign"C" getchar() also cuts to killer;
  bits32[%add(fp, 8)] = temp_123;
  Lloop_start_94: /* line 1  col 0 */
  temp_126 = foreign"C" compare_str(bits32[%add(fp, 8)],Lgbl_88) also cuts to killer;
  if (%sx32(%bit(%ne(temp_126, 0))) !=0) { goto LifTrue_91; } else { goto LifFalse_92; }
  LifTrue_91: /* line 1  col 0 */
  temp_125 =  isletter_38(bits32[fp],bits32[%add(fp, 8)]);
  temp_90 = %sx32(%bit(%eq(temp_125, 0)));
  goto LifEnd_93;
  LifFalse_92: /* line 1  col 0 */
  temp_90 = 0;
  LifEnd_93: /* line 1  col 0 */
  if (temp_90 !=0) { goto Lloop_body_95; } else { goto Lloop_end_89; }
  Lloop_body_95: /* line 1  col 0 */
  temp_124 = foreign"C" getchar() also cuts to killer;
  bits32[%add(fp, 8)] = temp_124;
  goto Lloop_start_94;
  Lloop_end_89: /* line 1  col 0 */
  Lloop_start_101: /* line 1  col 0 */
  temp_132 = foreign"C" compare_str(bits32[%add(fp, 8)],Lgbl_88) also cuts to killer;
  if (%sx32(%bit(%ne(temp_132, 0))) !=0) { goto LifTrue_98; } else { goto LifFalse_99; }
  LifTrue_98: /* line 1  col 0 */
  temp_97 =  isletter_38(bits32[fp],bits32[%add(fp, 8)]);
  goto LifEnd_100;
  LifFalse_99: /* line 1  col 0 */
  temp_97 = 0;
  LifEnd_100: /* line 1  col 0 */
  if (temp_97 !=0) { goto Lloop_body_102; } else { goto Lloop_end_96; }
  Lloop_body_102: /* line 1  col 0 */
  temp_130 = bits32[%add(fp, 4)];
  temp_129 =  isletter_38(bits32[fp],bits32[%add(fp, 8)]);
  temp_128 = foreign"C" chr(temp_129) also cuts to killer;
  temp_127 = foreign"C" concat(temp_130,temp_128) also cuts to killer;
  bits32[%add(fp, 4)] = temp_127;
  temp_131 = foreign"C" getchar() also cuts to killer;
  bits32[%add(fp, 8)] = temp_131;
  goto Lloop_start_101;
  Lloop_end_96: /* line 1  col 0 */
  temp_103 = bits32[%add(fp, 4)];
  return(temp_103);
 continuation killer():
 return(0);
}}}
section "data" {
 getword_39_gc_data:
   bits32[] { 3, 1,1,1 };
   bits32[] { 14, 1,1,1,1,1,0,1,0,0,1,0,0,0,1 };
}

section "text" {
span 1 main_40_gc_data {
 main_40(bits32 pfp) { /* level 2, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32 temp_107;
  bits32 temp_134;
  bits32 temp_135;
  bits32 temp_133;
  bits32[%add(fp, 4)] = Lgbl_88;
  temp_133 =  getword_39(bits32[fp]);
  bits32[%add(fp, 4)] = temp_133;
  Lloop_start_105: /* line 1  col 0 */
  temp_135 = foreign"C" size(bits32[%add(fp, 4)]) also cuts to killer;
  if (%sx32(%bit(%gt(temp_135, 0))) !=0) { goto Lloop_body_106; } else { goto Lloop_end_104; }
  Lloop_body_106: /* line 1  col 0 */
   add_word_36(bits32[fp],bits32[%add(fp, 4)]);
  temp_134 =  getword_39(bits32[fp]);
  bits32[%add(fp, 4)] = temp_134;
  goto Lloop_start_105;
  Lloop_end_104: /* line 1  col 0 */
  temp_107 =  tprint_37(bits32[fp],bits32[%add(bits32[fp], 4)]);
  return(temp_107);
 continuation killer():
 return(0);
}}}
section "data" {
 main_40_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 5, 1,0,1,0,1 };
}

section "text" {
span 1 tiger_main_gc_data {
foreign "C"  tiger_main(bits32 pfp) { /* level 1, stack 2 */
  stackdata { align 32; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32 temp_108;
  bits32[%add(fp, 4)] = 0;
  temp_108 =  main_40(fp);
  return(temp_108);
 continuation killer():
 return(0);
}}}
section "data" {
 tiger_main_gc_data:
   bits32[] { 2, 1,1 };
   bits32[] { 2, 1,0 };
}

