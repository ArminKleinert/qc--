target byteorder little memsize 8 wordsize 32 pointersize 32;
import bits32 "tig_not" as not;
import bits32 "tig_chr" as chr;
import bits32 "tig_sizea" as sizea;
import bits32 "tig_substring" as substring;
import bits32 "tig_concat" as concat;
import bits32 "tig_flush" as flush;
import bits32 "tig_ord" as ord;
import bits32 "tig_exit" as exit;
import bits32 "tig_print" as print;
import bits32 "tig_printi" as printi;
import bits32 "tig_getchar" as getchar;
import bits32 "tig_size" as size;
import bits32 "tig_alloc" as alloc;
import bits32 "tig_gc" as gc;
import bits32 "tig_compare_str" as compare_str;
import bits32 "tig_bounds_check" as bounds_check;
export tiger_main;
section "data" {
align 32;
gc_data: bits32 { 0 };
  bits32 { 6 };
  Lgbl_29: bits32 { 1 }; bits8[] "\n\000";
  bits32 { 6 };
  Lgbl_31: bits32 { 1 }; bits8[] " \000";
  bits32 { 29 };
  Lgbl_28: bits32 { 24 }; bits8[] "printing array of size: \000";
}

section "text" {
span 1 tiger_main_gc_data {
foreign "C"  tiger_main(bits32 pfp) { /* level 1, stack 3 */
  stackdata { align 32; fp : bits32[3]; }
  bits32[fp+0] = pfp;
  bits32 temp_34;
  bits32 temp_36;
  bits32 temp_35;
  bits32 temp_22;
  bits32 temp_21;
  temp_21 = foreign"C" alloc(%mul(%add(1, 10), 4)) also cuts to killer;
  temp_22 = %add(1, 10);
  Lloop_start_25: /* line 1  col 0 */
  if (temp_22 !=0) { goto Lloop_body_26; } else { goto Lloop_end_24; }
  Lloop_body_26: /* line 1  col 0 */
  bits32[%add(temp_21, %mul(%sub(temp_22, 1), 4))] = 80;
  temp_22 = %sub(temp_22, 1);
  goto Lloop_start_25;
  Lloop_end_24: /* line 1  col 0 */
  bits32[temp_21] = 10;
  bits32[%add(fp, 4)] = temp_21;
  foreign"C" bounds_check(bits32[%add(fp, 4)],1,7) also cuts to killer;
  bits32[%add(bits32[%add(fp, 4)], %mul(%add(1, 1), 4))] = 71;
  foreign"C" bounds_check(bits32[%add(fp, 4)],3,8) also cuts to killer;
  bits32[%add(bits32[%add(fp, 4)], %mul(%add(1, 3), 4))] = 71;
  foreign"C" bounds_check(bits32[%add(fp, 4)],5,9) also cuts to killer;
  bits32[%add(bits32[%add(fp, 4)], %mul(%add(1, 5), 4))] = 71;
  foreign"C" bounds_check(bits32[%add(fp, 4)],7,10) also cuts to killer;
  bits32[%add(bits32[%add(fp, 4)], %mul(%add(1, 7), 4))] = 71;
  foreign"C" bounds_check(bits32[%add(fp, 4)],9,11) also cuts to killer;
  bits32[%add(bits32[%add(fp, 4)], %mul(%add(1, 9), 4))] = 71;
  foreign"C" print(Lgbl_28) also cuts to killer;
  temp_35 = foreign"C" sizea(bits32[%add(fp, 4)]) also cuts to killer;
  foreign"C" printi(temp_35) also cuts to killer;
  foreign"C" print(Lgbl_29) also cuts to killer;
  bits32[%add(fp, 8)] = 0;
  Lloop_start_32: /* line 1  col 0 */
  if (%sx32(%bit(%le(bits32[%add(fp, 8)], 9))) !=0) { goto Lloop_body_33; } else { goto Lloop_end_30; }
  Lloop_body_33: /* line 1  col 0 */
  foreign"C" bounds_check(bits32[%add(fp, 4)],bits32[%add(fp, 8)],18) also cuts to killer;
  temp_36 = foreign"C" chr(bits32[%add(bits32[%add(fp, 4)], %mul(%add(1, bits32[%add(fp, 8)]), 4))]) also cuts to killer;
  foreign"C" print(temp_36) also cuts to killer;
  foreign"C" print(Lgbl_31) also cuts to killer;
  bits32[%add(fp, 8)] = %add(bits32[%add(fp, 8)], 1);
  goto Lloop_start_32;
  Lloop_end_30: /* line 1  col 0 */
  temp_34 = foreign"C" print(Lgbl_29) also cuts to killer;
  return(temp_34);
 continuation killer():
 return(0);
}}}
section "data" {
 tiger_main_gc_data:
   bits32[] { 3, 1,1,0 };
   bits32[] { 6, 1,0,1,0,0,1 };
}

