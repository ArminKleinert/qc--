
* Imports inside a procedure create a globally visible name. NR
  recommended this in oder to make the mapping from C-- labels to
  assembly names label simpler.  Now the mapping becomes scope
  independent.


* asdlGen:

  module m {
      foo = (int)
      bar = Bar (foo)
  }
  
  When a view maps foo to char the M.bar type becomes Bar of char, but
  M.foo is still int. 
  
* Literal values are not constants: a constant has width (or a type),
  while the width/type of a literal is unknown. Currently literals are treated
  as constants which is wrong. 

* Implement charset, character, and string handling as proposed by NR
  in the changes file.  The current handling of characters and
  strings must be replaced. 

* Constant evaluation: elab.nw contains a constant evaluation (against
  Fenv.Dirty) and ast2ir.nw needs a constant evaluation (against
  Fenv.Clean). The plan is, to use some IR technology for this which
  is not yet in place.
   
